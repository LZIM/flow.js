(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var addLegendPanel=require("./panels/legend-toggle/legend-panel");var addContextPanel=require("./panels/context-show/context-show-panel");var FlowInspector=function(root){function draw(el,elementTop,elementLeft,elementWidth,elementHeight,fillColor){var ctx=el.getContext("2d");ctx.fillStyle=fillColor,ctx.fillRect(elementLeft,elementTop,elementWidth,elementHeight)}function eraseCanvas(el,elementTop,elementLeft,elementWidth,elementHeight){var ctx=el.getContext("2d");var offset=0;ctx.clearRect(elementLeft-offset,elementTop-offset,elementWidth+2*offset,elementHeight+2*offset)}var drawModalCanvas=function(){var $canvas=$('<canvas class="f-modal"></canvas>');var windowHeight=$(document).height();var windowWidth=$(document).width();$canvas.attr({width:windowWidth,height:windowHeight}),$(root).append($canvas);var el=$canvas.get(0);return draw(el,0,0,windowWidth,windowHeight,"rgba(0,0,0,.4)"),el};var getClassNames=function(elem,attr){var elemType=elem.nodeName.toLowerCase();var isInputElement=-1!==["input","a","button"].indexOf(elemType);var classNames=[];return classNames.push(isInputElement?"f-input":"f-output"),0===attr.indexOf("on-")?classNames.push("f-on"):0===attr.indexOf("bind")?classNames.push("f-bind"):0===attr.indexOf("foreach")||0===attr.indexOf("repeat")?classNames.push("f-loop"):classNames.push("f-custom"),classNames.join(" ")};$(function(){var canvas=drawModalCanvas();var $overlayContainer=$('<div class="f-item-containers"></div>');var elemCounter=0;$(":f").each(function(index,elem){elemCounter++;var $thisElemContainer=$('<div id="f-container-'+elemCounter+'"></div');var pos=$(elem).offset();$thisElemContainer.css({top:pos.top-25+"px",left:pos.left+"px"}),$(elem).children().length||eraseCanvas(canvas,pos.top,pos.left,$(elem).innerWidth(),$(elem).innerHeight(),elem),$(elem.attributes).each(function(index,nodeMap){var attr=nodeMap.nodeName;var wantedPrefix="data-f-";if(0===attr.indexOf(wantedPrefix)){attr=attr.replace(wantedPrefix,"");var displayAttrName=attr.replace("on-","");var chain=_.invoke(nodeMap.value.split("|"),"trim");var originalVal=chain.shift();var $type=$('<span class="f-type"></span>').text(displayAttrName);var $val=$('<span class="f-val"></span>').text(originalVal);var $newEl=$("<div> </div>").append($type).append($val);chain.forEach(function(val){var cname=0===attr.indexOf("on")?"f-val":"f-conv";var $conv=$('<span class="'+cname+'"></span').text(val);$newEl.append($conv)}),$newEl.addClass(getClassNames(elem,attr)),$thisElemContainer.append($newEl)}}),$overlayContainer.append($thisElemContainer)});var evtName="f-select:type";addLegendPanel($overlayContainer,evtName),$overlayContainer.on(evtName,function(evt,type){$(root).toggleClass("hide-f-"+type)}),addContextPanel($overlayContainer,window.Flow.channel.run.getCurrentConfig),$(root).prepend($overlayContainer)})};window.Flow.Inspector=FlowInspector,module.exports=FlowInspector;
},{"./panels/context-show/context-show-panel":3,"./panels/legend-toggle/legend-panel":8}],2:[function(require,module,exports){
"use strict";var JuliaExtractor=require("./rules/julia-extract-rules");var PythonExtractor=require("./rules/python-extract-rules");var Extractor=function(modelName,modelContents){this.contents=modelContents.split(/\n/);var extension=modelName.split(".")[1];return"py"===extension?this.extractor=PythonExtractor:"jl"===extension&&(this.extractor=JuliaExtractor),this};Extractor.prototype.showContext=function(reference,isFunction){var pattern=isFunction?this.extractor.fn:this.extractor.variable;reference=reference.split(/[\[\.\(]/)[0];var startIndex=_.findIndex(this.contents,pattern.start(reference),this);var fromStart=this.contents.slice(startIndex+1);var endIndex=pattern.end(fromStart,this.contents[startIndex]);var offset=pattern.offset+1;-1===endIndex&&(endIndex=this.contents.length,offset=0);var arr=this.contents.slice(startIndex,startIndex+endIndex+offset);return arr.join("\n")},module.exports=Extractor;
},{"./rules/julia-extract-rules":5,"./rules/python-extract-rules":6}],3:[function(require,module,exports){
"use strict";var ContextExtractor=require("./context-extractor");module.exports=function($container,configFunction){var template=require("./context-show.html");var $html=$(template);if(!configFunction)return console.warn("You're using an older version of FlowJS which does not support viewing model context."),!1;var config=configFunction();var modelType=config.model.split(".")[1];if("vmf"===modelType)return console.info("Cannot view context for Vensim models."),!1;var file=new F.service.File(config);file.getContents(config.model,"model").then(function(response){var extractor=new ContextExtractor(config.model,response);$container.on("click",".f-bind, .f-foreach, .f-on",function(evt){var $target=$(evt.target).is(".f-val")?$(evt.target):$(evt.target).parent().find(".f-val");var variableName=$target.text().trim();var isFunction=$target.parent().is(".f-on");var context=extractor.showContext(variableName,isFunction);$html.find("pre").html(context)}),$container.append($html)}).fail(function(){console.info("Could not get model file contents; this is only available if you're logged in as an admin or team-member.")});var xOffset=0;var yOffset=0;var isDragged=!1;$html.on("mousedown",function(evt){return xOffset=evt.clientX-$html.offset().left,yOffset=evt.clientY-$html.offset().top,isDragged=!0,!1}),$html.on("mousemove",function(evt){return isDragged?(evt.stopPropagation(),$html.css({top:evt.clientY-yOffset,left:evt.clientX-xOffset}),!1):void 0}),$html.on("mouseup",function(evt){isDragged=!1})};
},{"./context-extractor":2,"./context-show.html":4}],4:[function(require,module,exports){
module.exports='<div class="f-panel f-code-inspector">\n    <h6> Click on one of the variables on the right to inspect. </h6>\n    <code>\n        <pre>\n\n        </pre>\n    </code>\n</div>\n';
},{}],5:[function(require,module,exports){
"use strict";module.exports={fn:{start:function(reference){var regExp=new RegExp("^\\s*?function\\s+"+reference);return function(val){return regExp.test(val)}},end:function(fromStart){return _.findIndex(fromStart,function(val,index){return val.match(/^end/)},this)},offset:1},variable:{start:function(reference){var regExp=new RegExp("^\\s*?(global\\s*)?"+reference+"\\s?=");return function(val){return regExp.test(val)}},end:function(fromStart){return _.findIndex(fromStart,function(val,index){return""===val.trim()||-1!==val.indexOf("=")},this)},offset:0}};
},{}],6:[function(require,module,exports){
"use strict";module.exports={fn:{start:function(reference){var regExp=new RegExp("^\\s*?def\\s+"+reference);return function(val){return regExp.test(val)}},end:function(fromStart,startValue){var leadingSpacesInStart=startValue.match(/^ */)[0].length;var indexOfLastGoodLine=0;return _.every(fromStart,function(line,index){var leadingSpacesInLine=line.match(/^ */)[0].length;if(""!==line.trim()){if(leadingSpacesInLine===leadingSpacesInStart)return!1;indexOfLastGoodLine=index}return!0}),indexOfLastGoodLine+1},offset:0},variable:{start:function(reference){var regExp=new RegExp("^"+reference+"\\s?=");return function(val){return regExp.test(val)}},end:function(fromStart){return _.findIndex(fromStart,function(val,index){return""===val.trim()||-1!==val.indexOf("=")},this)},offset:0}};
},{}],7:[function(require,module,exports){
module.exports='<div class="f-legend-panel f-panel">\n    <h6> Outputs </h6>\n\n    <label class="f-output">\n        <input type="checkbox" checked />\n        <div class="f-bind">\n            <span class="f-type">Bind</span>\n            <span class="f-val">Variable Name</span>\n            <span class="f-conv">Converters</span>\n        </div>\n    </label>\n    <label class="f-output">\n        <input type="checkbox" checked />\n        <div class="f-loop">\n            <span class="f-type">Loop</span>\n            <span class="f-val">Variable Name</span>\n            <span class="f-conv">Converters</span>\n        </div>\n    </label>\n    <label class="f-output">\n        <input type="checkbox" checked />\n        <div class="f-custom">\n            <span class="f-type">Custom</span>\n            <span class="f-val">Variable Name</span>\n            <span class="f-conv">Converters</span>\n        </div>\n    </label>\n\n    <h6> Inputs </h6>\n    <label class="f-input">\n        <input type="checkbox" checked />\n        <div class="f-bind">\n            <span class="f-type">Bind</span>\n            <span class="f-val">Variable Name</span>\n            <span class="f-conv">Converters</span>\n        </div>\n    </label>\n\n    <label class="f-input">\n        <input type="checkbox" checked />\n        <div class="f-on">\n            <span class="f-type">Event</span>\n            <span class="f-val">Operation</span>\n        </div>\n    </label>\n</div>\n';
},{}],8:[function(require,module,exports){
"use strict";module.exports=function($container,evtName){var template=require("./legend-panel.html");var $html=$(template);$container.append($html),$container.on("click",":checkbox",function(evt){evt.stopPropagation();var $target=$(evt.target);var type=$target.parent().attr("class").replace("f-","");var subType=$target.parent().children("[class^=f-]").attr("class").replace("f-","");$container.trigger(evtName,type+"-"+subType)});var xOffset=0;var yOffset=0;var isDragged=!1;$html.on("mousedown",function(evt){return xOffset=evt.clientX-$html.offset().left,yOffset=evt.clientY-$html.offset().top,isDragged=!0,!1}),$html.on("mousemove",function(evt){return isDragged?(evt.stopPropagation(),$html.css({top:evt.clientY-yOffset,left:evt.clientX-xOffset}),!1):void 0}),$html.on("mouseup",function(evt){isDragged=!1})};
},{"./legend-panel.html":7}]},{},[1])


//# sourceMappingURL=flow-inspector.min.js.map