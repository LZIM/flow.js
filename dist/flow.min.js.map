{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/app.js","src/flow.js","src/channels/run-channel.js","src/dom/dom-manager.js","src/config.js","src/dom/nodes/node-manager.js","src/dom/attributes/attribute-manager.js","src/converters/converter-manager.js","src/utils/parse-utils.js","src/utils/dom.js","src/channels/variables-channel.js","src/channels/operations-channel.js","src/converters/number-converter.js","src/converters/string-converter.js","src/converters/array-converter.js","src/converters/numberformat-converter.js","src/dom/nodes/input-checkbox-node.js","src/dom/nodes/default-input-node.js","src/dom/nodes/default-node.js","src/dom/attributes/no-op-attr.js","src/dom/attributes/events/init-event-attr.js","src/dom/attributes/events/default-event-attr.js","src/dom/attributes/binds/checkbox-radio-bind-attr.js","src/dom/attributes/binds/input-bind-attr.js","src/dom/attributes/class-attr.js","src/dom/attributes/positive-boolean-attr.js","src/dom/attributes/negative-boolean-attr.js","src/dom/attributes/binds/default-bind-attr.js","src/dom/attributes/default-attr.js","src/dom/nodes/base.js"],"names":["window","Flow","require","version","domManager","Channel","module","exports","dom","initialize","config","model","$","data","defaults","channel","run","account","project","operations","root","options","extend","this","$root","initFn","opnSilent","silent","isInitOperationSilent","_","isArray","contains","preFetchVariables","me","off","on","variables","refresh","VarsChannel","OperationsChannel","rm","F","manager","RunManager","rs","$creationPromise","getRun","currentPromise","createAndThen","fn","context","wrap","func","passedInParams","toArray","arguments","slice","then","apply","each","value","name","isFunction","originalVariablesFn","vs","vent","nodeManager","attrManager","converterManager","parseUtils","domUtils","expr","prefix","obj","$this","dataprops","keys","match","find","attr","indexOf","webcomponent","nodeName","publicAPI","nodes","attributes","converters","private","matchedElements","is","add","index","element","$el","Handler","getHandler","handle","el","varMap","nodeMap","attrVal","wantedPrefix","replace","handler","isBindableAttr","init","call","withConv","invoke","split","length","shift","commaRegex","subscribable","Object","subscribe","trigger","events","react","evt","target","varmap","convertible","variableName","propertyToUpdate","trim","parsedData","attrConverters","getConvertersList","val","key","parse","toImplicitType","bind","publish","convert","prop","toLowerCase","convertedValue","isPlainObject","opn","params","map","defaultAttr","binderAttr","normalize","selector","toMatch","node","isString","list","register","unshift","currentHandler","i","splice","defaultHandlers","reverse","handlersList","attributeMatcher","nodeMatcher","test","push","matchAttr","matchExpr","attrMatch","isRegExp","matchNode","nodeFilter","filter","attrFilter","filtered","select","property","alias","converter","ret","isObject","matchConverter","isRegex","normalized","concat","currentConverter","getConverter","currentValue","converterName","defaultconverters","rbrace","converted","charAt","substring","isNumeric","parseJSON","matchValue","$parentEl","closest","channelOptions","currentData","isEqual","getInnerVariables","str","inner","interpolate","variablesToInterpolate","values","interpolationMap","interpolated","outerVariable","originalOuter","innerVariable","thisval","undefined","innerVariablesList","variableListenerMap","changeObj","force","changedVariables","shouldSilence","intersection","except","Deferred","resolve","promise","getVariables","vars","query","vname","oldValue","notify","interpolatedName","innerVariables","ip","outer","variable","listeners","listener","Error","attrs","save","properties","subscriber","id","uniqueId","uniq","unsubscribe","token","reject","subs","unsubscribeAll","listenerMap","executedOpns","response","operation","serial","parallel","pluck","opts","do","parseFloat","s","upperCase","toUpperCase","lowerCase","titleCase","txt","substr","last","first","previous","isNegative","floatMatcher","results","exec","number","suffix","getDigits","digits","roundTo","Math","max","ceil","log","LN10","TXT","numberTXT","toString","decimalSet","iTXT","addDecimals","decimals","minDecimals","hasCommas","hasDecimals","iDec","iChar","toADD","round","pow","getSuffix","formatTXT","fixesTXT","RegExp","isCurrency","string","format","isNumber","isNaN","formats","abs","sign","leftOfDecimal","d","lastIndexOf","isShortFormat","nextChar","leadingText","rightOfPrefix","shortFormatTest","shortFormatTestResult","valScale","floor","min","Number","SUFFIX","valWithoutLeading","scales","limitDigits","subFormats","preffix","formatted","BaseView","propertyHandlers","getUIValue","offVal","onVal","prototype","uiChangeEvent","propName","noop","listOfOperations","fnName","args","settableValue","isChecked","addedClasses","removeClass","addClass","html","protoProps","staticProps","parent","child","has","constructor","Surrogate","__super__","View"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","window.Flow = require('./flow.js');\nwindow.Flow.version = '<%= version %>'; //populated by grunt\n","'use strict';\n\nvar domManager = require('./dom/dom-manager');\nvar Channel = require('./channels/run-channel');\n\nmodule.exports = {\n    dom: domManager,\n\n    initialize: function (config) {\n        var model = $('body').data('f-model');\n\n        var defaults = {\n            channel: {\n                run: {\n                    account: '',\n                    project: '',\n                    model: model,\n\n                    operations: {\n                    }\n                }\n            },\n            dom: {\n                root: 'body'\n            }\n        };\n\n        var options = $.extend(true, {}, defaults, config);\n        if (config && config.channel && (config.channel instanceof Channel)) {\n            this.channel = config.channel;\n        } else {\n            this.channel = new Channel(options.channel);\n        }\n\n        var $root = $(options.dom.root);\n        var initFn = $root.data('f-on-init');\n        var opnSilent = options.channel.run.operations.silent;\n        var isInitOperationSilent = initFn && (opnSilent === true || (_.isArray(opnSilent) && _.contains(opnSilent, initFn)));\n        var preFetchVariables = !initFn || isInitOperationSilent;\n        var me = this;\n\n        if (preFetchVariables) {\n            $root.off('f.domready').on('f.domready', function () {\n                me.channel.variables.refresh(null, true);\n            });\n        }\n\n        domManager.initialize($.extend(true, {\n            channel: this.channel\n        }, options.dom));\n    }\n};\n","'use strict';\n\nvar VarsChannel = require('./variables-channel');\nvar OperationsChannel = require('./operations-channel');\n\nmodule.exports = function (options) {\n    var defaults = {\n        run: {\n            variables: {\n\n            },\n            operations: {\n\n            }\n        }\n    };\n    var config = $.extend(true, {}, defaults, options);\n\n    var rm = new F.manager.RunManager(config);\n    var rs = rm.run;\n\n    var $creationPromise = rm.getRun();\n    rs.currentPromise = $creationPromise;\n\n    var createAndThen = function (fn, context) {\n        return _.wrap(fn, function (func) {\n            var passedInParams = _.toArray(arguments).slice(1);\n            return rs.currentPromise.then(function () {\n                rs.currentPromise = func.apply(context, passedInParams);\n                return rs.currentPromise;\n            });\n        });\n    };\n\n    //Make sure nothing happens before the run is created\n    _.each(rs, function (value, name) {\n        if (_.isFunction(value) && name !== 'variables'  && name !== 'create') {\n            rs[name] = createAndThen(value, rs);\n        }\n    });\n\n    var originalVariablesFn = rs.variables;\n    rs.variables = function () {\n        var vs = originalVariablesFn.apply(rs, arguments);\n        _.each(vs, function (value, name) {\n            if (_.isFunction(value)) {\n                vs[name] = createAndThen(value, vs);\n            }\n        });\n        return vs;\n    };\n\n    this.run = rs;\n    this.variables = new VarsChannel($.extend(true, {}, config.run.variables, { run: rs, vent: this }));\n    this.operations = new OperationsChannel($.extend(true, {}, config.run.operations, { run: rs, vent: this }));\n};\n","module.exports = (function () {\n    'use strict';\n    var config = require('../config');\n\n    var nodeManager = require('./nodes/node-manager');\n    var attrManager = require('./attributes/attribute-manager');\n    var converterManager = require('../converters/converter-manager');\n\n    var parseUtils = require('../utils/parse-utils');\n    var domUtils = require('../utils/dom');\n\n    //Jquery selector to return everything which has a f- property set\n    $.expr[':'][config.prefix] = function (obj) {\n        var $this = $(obj);\n        var dataprops = _.keys($this.data());\n\n        var match = _.find(dataprops, function (attr) {\n            return (attr.indexOf(config.prefix) === 0);\n        });\n\n        return !!(match);\n    };\n\n    $.expr[':'].webcomponent = function (obj) {\n        return obj.nodeName.indexOf('-') !== -1;\n    };\n\n    var publicAPI = {\n\n        nodes: nodeManager,\n        attributes: attrManager,\n        converters: converterManager,\n        //utils for testing\n        private: {\n            matchedElements: []\n        },\n\n        initialize: function (options) {\n            var defaults = {\n                root: 'body',\n                channel: null\n            };\n            $.extend(defaults, options);\n\n            var channel = defaults.channel;\n\n            this.options = defaults;\n\n            var me = this;\n            var $root = $(defaults.root);\n            $(function () {\n                //parse through dom and find everything with matching attributes\n                var matchedElements = $root.find(':' + config.prefix);\n                if ($root.is(':' + config.prefix)) {\n                    matchedElements = matchedElements.add($(defaults.root));\n                }\n\n                me.private.matchedElements = matchedElements;\n\n                $.each(matchedElements, function (index, element) {\n                    var $el = $(element);\n                    var Handler = nodeManager.getHandler($el);\n                    new Handler.handle({\n                        el: element\n                    });\n\n\n                    var varMap = $el.data('variable-attr-map');\n                    if (!varMap) {\n                        varMap = {};\n                        //NOTE: looping through attributes instead of .data because .data automatically camelcases properties and make it hard to retrvieve\n                        $(element.attributes).each(function (index, nodeMap) {\n                            var attr = nodeMap.nodeName;\n                            var attrVal = nodeMap.value;\n\n                            var wantedPrefix = 'data-f-';\n                            if (attr.indexOf(wantedPrefix) === 0) {\n                                attr = attr.replace(wantedPrefix, '');\n\n                                var handler = attrManager.getHandler(attr, $el);\n                                var isBindableAttr = true;\n                                if (handler && handler.init) {\n                                    isBindableAttr = handler.init.call($el, attr, attrVal);\n                                }\n\n                                if (isBindableAttr) {\n                                    //Convert pipes to converter attrs\n                                    var withConv = _.invoke(attrVal.split('|'), 'trim');\n                                    if (withConv.length > 1) {\n                                        attrVal = withConv.shift();\n                                        $el.data('f-converters-' + attr, withConv);\n                                    }\n\n                                    var commaRegex = /,(?![^\\[]*\\])/;\n                                    if (attrVal.split(commaRegex).length > 1) {\n                                        //TODO\n                                        // triggerers = triggerers.concat(val.split(','));\n                                    } else {\n                                        varMap[attrVal] = attr;\n                                    }\n                                }\n                            }\n                        });\n                        $el.data('variable-attr-map', varMap);\n                    }\n\n                    var subscribable = Object.keys(varMap);\n                    if (subscribable.length) {\n                        channel.variables.subscribe(Object.keys(varMap), $el);\n                    }\n                });\n                $root.trigger('f.domready');\n\n                //Attach listeners\n                // Listen for changes from api and update ui\n                $root.off(config.events.react).on(config.events.react, function (evt, data) {\n                    // console.log(evt.target, data, \"root on\");\n                    var $el = $(evt.target);\n                    var varmap = $el.data('variable-attr-map');\n\n                    var convertible = {};\n                    $.each(data, function (variableName, value) {\n                        var propertyToUpdate = varmap[variableName.trim()];\n                        if (propertyToUpdate) {\n                            convertible[propertyToUpdate] = value;\n                        }\n                    });\n                    $el.trigger('f.convert', convertible);\n                });\n\n                // Listen for changes to ui and publish to api\n                $root.off(config.events.trigger).on(config.events.trigger, function (evt, data) {\n                    var parsedData = {}; //if not all subsequent listeners will get the modified data\n\n                    var $el = $(evt.target);\n                    var attrConverters =  domUtils.getConvertersList($el, 'bind');\n\n                    _.each(data, function (val, key) {\n                        key = key.split('|')[0].trim(); //in case the pipe formatting syntax was used\n                        val = converterManager.parse(val, attrConverters);\n                        parsedData[key] = parseUtils.toImplicitType(val);\n\n                        $el.trigger('f.convert', { bind: val });\n                    });\n\n                    channel.variables.publish(parsedData);\n                });\n\n                // data = {proptoupdate: value}\n                $root.off('f.convert').on('f.convert', function (evt, data) {\n                    var $el = $(evt.target);\n                    var convert = function (val, prop) {\n                        prop = prop.toLowerCase();\n                        var attrConverters =  domUtils.getConvertersList($el, prop);\n                        var handler = attrManager.getHandler(prop, $el);\n                        var convertedValue = converterManager.convert(val, attrConverters);\n                        handler.handle.call($el, convertedValue, prop);\n                    };\n\n                    if ($.isPlainObject(data)) {\n                        _.each(data, convert);\n                    } else {\n                        convert(data, 'bind');\n                    }\n                });\n\n                $root.off('f.ui.operate').on('f.ui.operate', function (evt, data) {\n                    data = $.extend(true, {}, data); //if not all subsequent listeners will get the modified data\n                    _.each(data.operations, function (opn) {\n                       opn.params = _.map(opn.params, function (val) {\n                           return parseUtils.toImplicitType($.trim(val));\n                       });\n                    });\n                    channel.operations.publish(data);\n                });\n            });\n        }\n    };\n\n    return $.extend(this, publicAPI);\n}());\n","module.exports = {\n    prefix: 'f',\n    defaultAttr: 'bind',\n\n    binderAttr: 'f-bind',\n\n    events: {\n        trigger: 'update.f.ui',\n        react: 'update.f.model'\n    }\n\n};\n","'use strict';\n\nvar normalize = function (selector, handler) {\n    if (_.isFunction(handler)) {\n        handler = {\n            handle: handler\n        };\n    }\n    if (!selector) {\n        selector = '*';\n    }\n    handler.selector = selector;\n    return handler;\n};\n\nvar match = function (toMatch, node) {\n    if (_.isString(toMatch)) {\n        return toMatch === node.selector;\n    } else {\n        return $(toMatch).is(node.selector);\n    }\n};\n\nvar nodeManager = {\n    list: [],\n\n    /**\n     * Add a new node handler\n     * @param  {string} selector jQuery-compatible selector to use to match nodes\n     * @param  {function} handler  Handlers are new-able functions. They will be called with $el as context.? TODO: Think this through\n     */\n    register: function (selector, handler) {\n        this.list.unshift(normalize(selector, handler));\n    },\n\n    getHandler: function (selector) {\n        return _.find(this.list, function (node) {\n            return match(selector, node);\n        });\n    },\n\n    replace: function (selector, handler) {\n        var index;\n        _.each(this.list, function (currentHandler, i) {\n            if (selector === currentHandler.selector) {\n                index = i;\n                return false;\n            }\n        });\n        this.list.splice(index, 1, normalize(selector, handler));\n    }\n};\n\n//bootstraps\nvar defaultHandlers = [\n    require('./input-checkbox-node'),\n    require('./default-input-node'),\n    require('./default-node')\n];\n_.each(defaultHandlers.reverse(), function (handler) {\n    nodeManager.register(handler.selector, handler);\n});\n\nmodule.exports = nodeManager;\n","'use strict';\n\nvar defaultHandlers = [\n    require('./no-op-attr'),\n    require('./events/init-event-attr'),\n    require('./events/default-event-attr'),\n    require('./binds/checkbox-radio-bind-attr'),\n    require('./binds/input-bind-attr'),\n    require('./class-attr'),\n    require('./positive-boolean-attr'),\n    require('./negative-boolean-attr'),\n    require('./binds/default-bind-attr'),\n    require('./default-attr')\n];\n\nvar handlersList = [];\n\nvar normalize = function (attributeMatcher, nodeMatcher, handler) {\n    if (!nodeMatcher) {\n        nodeMatcher = '*';\n    }\n    if (_.isFunction(handler)) {\n        handler = {\n            handle: handler\n        };\n    }\n    return $.extend(handler, { test: attributeMatcher, target: nodeMatcher });\n};\n\n$.each(defaultHandlers, function (index, handler) {\n    handlersList.push(normalize(handler.test, handler.target, handler));\n});\n\n\nvar matchAttr = function (matchExpr, attr, $el) {\n    var attrMatch;\n\n    if (_.isString(matchExpr)) {\n        attrMatch = (matchExpr === '*' || (matchExpr.toLowerCase() === attr.toLowerCase()));\n    } else if (_.isFunction(matchExpr)) {\n        //TODO: remove element selectors from attributes\n        attrMatch = matchExpr(attr, $el);\n    } else if (_.isRegExp(matchExpr)) {\n        attrMatch = attr.match(matchExpr);\n    }\n    return attrMatch;\n};\n\nvar matchNode = function (target, nodeFilter) {\n    return (_.isString(nodeFilter)) ? (nodeFilter === target) : nodeFilter.is(target);\n};\n\nmodule.exports = {\n    list: handlersList,\n    /**\n     * Add a new attribute handler\n     * @param  {string|function|regex} attributeMatcher Description of which attributes to match\n     * @param  {string} nodeMatcher      Which nodes to all attributes to. Use jquery Selector syntax\n     * @param  {function|object} handler    Handler can either be a function (The function will be called with $element as context, and attribute value + name), or an object with {init: fn,  handle: fn}. The init function will be called when page loads; use this to define event handlers\n     */\n    register: function (attributeMatcher, nodeMatcher, handler) {\n        handlersList.unshift(normalize.apply(null, arguments));\n    },\n\n    /**\n     * Find an attribute matcher matching some criteria\n     * @param  {string} attrFilter attribute to match\n     * @param  {string | $el} nodeFilter node to match\n     * @return {array|null}\n     */\n    filter: function (attrFilter, nodeFilter) {\n        var filtered = _.select(handlersList, function (handler) {\n            return matchAttr(handler.test, attrFilter);\n        });\n        if (nodeFilter) {\n            filtered = _.select(filtered, function (handler) {\n                return matchNode(handler.target, nodeFilter);\n            });\n        }\n        return filtered;\n    },\n\n    replace: function (attrFilter, nodeFilter, handler) {\n        var index;\n        _.each(handlersList, function (currentHandler, i) {\n            if (matchAttr(currentHandler.test, attrFilter) && matchNode(currentHandler.target, nodeFilter)) {\n                index = i;\n                return false;\n            }\n        });\n        handlersList.splice(index, 1, normalize(attrFilter, nodeFilter, handler));\n    },\n\n    getHandler: function (property, $el) {\n        var filtered = this.filter(property, $el);\n        //There could be multiple matches, but the top first has the most priority\n        return filtered[0];\n    }\n};\n\n","'use strict';\n\n//TODO: Make all underscore filters available\n\nvar normalize = function (alias, converter) {\n    var ret = [];\n    //nomalize('flip', fn)\n    if (_.isFunction(converter)) {\n        ret.push({\n            alias: alias,\n            convert: converter\n        });\n    } else if (_.isObject(converter) && converter.convert) {\n        converter.alias = alias;\n        ret.push(converter);\n    } else if (_.isObject(alias)) {\n        //normalize({alias: 'flip', convert: function})\n        if (alias.convert) {\n            ret.push(alias);\n        } else {\n            // normalize({flip: fun})\n            $.each(alias, function (key, val) {\n                ret.push({\n                    alias: key,\n                    convert: val\n                });\n            });\n        }\n    }\n    return ret;\n};\n\nvar matchConverter = function (alias, converter) {\n    if (_.isString(converter.alias)) {\n        return alias === converter.alias;\n    } else if (_.isFunction(converter.alias)) {\n        return converter.alias(alias);\n    } else if (_.isRegex(converter.alias)) {\n        return converter.alias.match(alias);\n    }\n    return false;\n};\n\nvar converterManager = {\n    private: {\n        matchConverter: matchConverter\n    },\n\n    list: [],\n    /**\n     * Add a new attribute converter\n     * @param  {string|function|regex} alias formatter name\n     * @param  {function|object} converter    converter can either be a function, which will be called with the value, or an object with {alias: '', parse: $.noop, convert: $.noop}\n     */\n    register: function (alias, converter) {\n        var normalized = normalize(alias, converter);\n        this.list = normalized.concat(this.list);\n    },\n\n    replace: function (alias, converter) {\n        var index;\n        _.each(this.list, function (currentConverter, i) {\n            if (matchConverter(alias, currentConverter)) {\n                index = i;\n                return false;\n            }\n        });\n        this.list.splice(index, 1, normalize(alias, converter)[0]);\n    },\n\n    getConverter: function (alias) {\n        return _.find(this.list, function (converter) {\n            return matchConverter(alias, converter);\n        });\n    },\n\n    convert: function (value, list) {\n        if (!list || !list.length) {\n            return value;\n        }\n        list = [].concat(list);\n        list = _.invoke(list, 'trim');\n\n        var currentValue = value;\n        var me = this;\n        _.each(list, function (converterName) {\n            var converter = me.getConverter(converterName);\n            currentValue = converter.convert(currentValue, converterName);\n        });\n        return currentValue;\n    },\n\n    /**\n     * Counter-part to 'convert'. Translates converted values back to their original form\n     * @param  {String} value Value to parse\n     * @param  {String | Array} list  List of parsers to run this through. Outermost is invoked first\n     * @return {*}\n     */\n    parse: function (value, list) {\n        if (!list || !list.length) {\n            return value;\n        }\n        list = [].concat(list).reverse();\n        list = _.invoke(list, 'trim');\n\n        var currentValue = value;\n        var me = this;\n        _.each(list, function (converterName) {\n            var converter = me.getConverter(converterName);\n            if (converter.parse) {\n                currentValue = converter.parse(currentValue, converterName);\n            }\n        });\n        return currentValue;\n    }\n};\n\n\n//Bootstrap\nvar defaultconverters = [\n    require('./number-converter'),\n    require('./string-converter'),\n    require('./array-converter'),\n    require('./numberformat-converter'),\n];\n\n$.each(defaultconverters.reverse(), function (index, converter) {\n    converterManager.register(converter);\n});\n\nmodule.exports = converterManager;\n","'use strict';\n\nmodule.exports = {\n\n    toImplicitType: function (data) {\n        var rbrace = /^(?:\\{.*\\}|\\[.*\\])$/;\n        var converted = data;\n        if (typeof data === 'string') {\n            data = data.trim();\n\n            if (data === 'true') {\n                converted = true;\n            } else if (data === 'false') {\n                converted = false;\n            } else if (data === 'null') {\n                converted = null;\n            } else if (data === 'undefined') {\n                converted = '';\n            } else if (converted.charAt(0) === '\\'' || converted.charAt(0) === '\"') {\n                converted = data.substring(1, data.length - 1);\n            } else if ($.isNumeric(data)) {\n                converted = +data;\n            } else if (rbrace.test(data)) {\n                //TODO: This only works with double quotes, i.e., [1,\"2\"] works but not [1,'2']\n                converted = $.parseJSON(data) ;\n            }\n        }\n        return converted;\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    match: function (matchExpr, matchValue, context) {\n        if (_.isString(matchExpr)) {\n            return (matchExpr === '*' || (matchExpr.toLowerCase() === matchValue.toLowerCase()));\n        } else if (_.isFunction(matchExpr)) {\n            return matchExpr(matchValue, context);\n        } else if (_.isRegExp(matchExpr)) {\n            return matchValue.match(matchExpr);\n        }\n    },\n\n    getConvertersList: function ($el, property) {\n        var attrConverters = $el.data('f-converters-' + property);\n\n        if (!attrConverters && property === 'bind') {\n            //Only bind inherits from parents\n            attrConverters = $el.data('f-convert');\n            if (!attrConverters) {\n                var $parentEl = $el.closest('[data-f-convert]');\n                if ($parentEl) {\n                    attrConverters = $parentEl.data('f-convert');\n                }\n            }\n\n            if (attrConverters) {\n                attrConverters = attrConverters.split('|');\n            }\n        }\n\n        return attrConverters;\n    }\n};\n","'use strict';\nvar config = require('../config');\n\nmodule.exports = function (options) {\n    var defaults = {\n        /**\n         * Determine when to update state\n         * @type {String | Array | Object} Possible options are\n         *       - true: never trigger any updates. Use this if you know your model state won't change based on other variables\n         *       - false: always trigger updates.\n         *       - [array of variable names]: Variables in this array will not trigger updates, everything else will\n         *       - { except: [array of variables]}: Variables in this array will trigger updates, nothing else will\n         */\n        silent: false\n    };\n\n    var channelOptions = $.extend(true, {}, defaults, options);\n    var vs = channelOptions.run.variables();\n    var vent = channelOptions.vent;\n\n    var currentData = {};\n\n    //TODO: actually compare objects and so on\n    var isEqual = function (a, b) {\n        return false;\n    };\n\n    var getInnerVariables = function (str) {\n        var inner = str.match(/<(.*?)>/g);\n        inner = _.map(inner, function (val) {\n            return val.substring(1, val.length - 1);\n        });\n        return inner;\n    };\n\n    //Replaces stubbed out keynames in variablestointerpolate with their corresponding values\n    var interpolate = function (variablesToInterpolate, values) {\n        //{price[1]: price[<time>]}\n        var interpolationMap = {};\n        //{price[1]: 1}\n        var interpolated = {};\n\n        _.each(variablesToInterpolate, function (val, outerVariable) {\n            var inner = getInnerVariables(outerVariable);\n            if (inner && inner.length) {\n                var originalOuter = outerVariable;\n                $.each(inner, function (index, innerVariable) {\n                    var thisval = values[innerVariable];\n                    if (thisval !== null && thisval !== undefined) {\n                        if (_.isArray(thisval)) {\n                            //For arrayed things get the last one for interpolation purposes\n                            thisval = thisval[thisval.length - 1];\n                        }\n                        //TODO: Regex to match spaces and so on\n                        outerVariable = outerVariable.replace('<' + innerVariable + '>', thisval);\n                    }\n                });\n                interpolationMap[outerVariable] = (interpolationMap[outerVariable]) ? [originalOuter].concat(interpolationMap[outerVariable]) : originalOuter;\n            }\n            interpolated[outerVariable] = val;\n        });\n\n        return {\n            interpolated: interpolated,\n            interpolationMap: interpolationMap\n        };\n    };\n\n    var publicAPI = {\n        //for testing\n        private: {\n            getInnerVariables: getInnerVariables,\n            interpolate: interpolate,\n            options: channelOptions\n        },\n\n        //Interpolated variables which need to be resolved before the outer ones can be\n        innerVariablesList: [],\n        variableListenerMap: {},\n\n        /**\n         * Check and notify all listeners\n         * @param  {Object} changeObj key-value pairs of changed variables\n         */\n        refresh: function (changeObj, force) {\n            var me = this;\n            var silent = channelOptions.silent;\n            var changedVariables = _.keys(changeObj);\n\n            var shouldSilence = silent === true;\n            if (_.isArray(silent) && changedVariables) {\n                shouldSilence = _.intersection(silent, changedVariables).length >= 1;\n            }\n            if ($.isPlainObject(silent) && changedVariables) {\n                shouldSilence = _.intersection(silent.except, changedVariables).length !== changedVariables.length;\n            }\n\n            if (shouldSilence && force !== true) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var getVariables = function (vars, interpolationMap) {\n                return vs.query(vars).then(function (variables) {\n                    // console.log('Got variables', variables);\n                    _.each(variables, function (value, vname) {\n                        var oldValue = currentData[vname];\n                        if (!isEqual(value, oldValue)) {\n                            currentData[vname] = value;\n\n                            if (me.variableListenerMap[vname]) {\n                                //is anyone lisenting for this value explicitly\n                                me.notify(vname, value);\n                            }\n                            if (interpolationMap && interpolationMap[vname]) {\n                                var map = [].concat(interpolationMap[vname]);\n                                _.each(map, function (interpolatedName) {\n                                    if (me.variableListenerMap[interpolatedName]) {\n                                        //is anyone lisenting for the interpolated value\n                                        me.notify(interpolatedName, value);\n                                    }\n                                });\n                            }\n                        }\n                    });\n                });\n            };\n            if (me.innerVariablesList.length) {\n                return vs.query(me.innerVariablesList).then(function (innerVariables) {\n                    //console.log('inner', innerVariables);\n                    $.extend(currentData, innerVariables);\n                    var ip =  interpolate(me.variableListenerMap, innerVariables);\n                    var outer = _.keys(ip.interpolated);\n                    getVariables(outer, ip.interpolationMap);\n                });\n            } else {\n                return getVariables(_.keys(me.variableListenerMap));\n            }\n\n        },\n\n        notify: function (variable, value) {\n            var listeners = this.variableListenerMap[variable];\n            var params = {};\n            params[variable] = value;\n\n            _.each(listeners, function (listener) {\n                var target = listener.target;\n                if (_.isFunction(target)) {\n                    target.call(null, params);\n                } else if (target.trigger) {\n                    listener.target.trigger(config.events.react, params);\n                } else {\n                    throw new Error('Unknown listerer format for ' + variable);\n                }\n            });\n        },\n\n        /**\n         * Variable name & parameters to send variables API\n         * @param  {string | object} variable string or {variablename: value}\n         * @param  {*} value (optional)   value of variable if previous arg was a string\n         * @param {object} options Supported options: {silent: Boolean}\n         * @return {$promise}\n         */\n        publish: function (variable, value, options) {\n            // console.log('publish', arguments);\n            // TODO: check if interpolated\n            var attrs;\n            if ($.isPlainObject(variable)) {\n                attrs = variable;\n                options = value;\n            } else {\n                (attrs = {})[variable] = value;\n            }\n            var interpolated = interpolate(attrs, currentData).interpolated;\n\n            var me = this;\n            return vs.save.call(vs, interpolated)\n                .then(function () {\n                    if (!options || !options.silent) {\n                        me.refresh.call(me, attrs);\n                    }\n                });\n        },\n\n        subscribe: function (properties, subscriber) {\n            // console.log('subscribing', properties, subscriber);\n\n            properties = [].concat(properties);\n            //use jquery to make event sink\n            if (!subscriber.on && !_.isFunction(subscriber)) {\n                subscriber = $(subscriber);\n            }\n\n            var id  = _.uniqueId('epichannel.variable');\n            var data = {\n                id: id,\n                target: subscriber\n            };\n\n            var me = this;\n            $.each(properties, function (index, property) {\n                var inner = getInnerVariables(property);\n                if (inner.length) {\n                    me.innerVariablesList = me.innerVariablesList.concat(inner);\n                }\n                me.innerVariablesList = _.uniq(me.innerVariablesList);\n\n                if (!me.variableListenerMap[property]) {\n                    me.variableListenerMap[property] = [];\n                }\n                me.variableListenerMap[property] = me.variableListenerMap[property].concat(data);\n            });\n\n            return id;\n        },\n        unsubscribe: function (variable, token) {\n            this.variableListenerMap[variable] = _.reject(this.variableListenerMap[variable], function (subs) {\n                return subs.id === token;\n            });\n        },\n        unsubscribeAll: function () {\n            this.variableListenerMap = {};\n            this.innerVariablesList = [];\n        }\n    };\n\n    $.extend(this, publicAPI);\n    var me = this;\n    $(vent).off('dirty').on('dirty', function () {\n        me.refresh.call(me, null, true);\n    });\n};\n","'use strict';\nvar config = require('../config');\n\nmodule.exports = function (options) {\n    var defaults = {\n        /**\n         * Determine when to update state\n         * @type {String | Array | Object} Possible options are\n         *       - true: never trigger any updates. Use this if you know your model state won't change based on operations\n         *       - false: always trigger updates.\n         *       - [array of variable names]: Variables in this array will not trigger updates, everything else will\n         *       - { except: [array of operations]}: Variables in this array will trigger updates, nothing else will\n         */\n        silent: false\n    };\n\n    var channelOptions = $.extend(true, {}, defaults, options);\n    var run = channelOptions.run;\n    var vent = channelOptions.vent;\n\n    var publicAPI = {\n        //for testing\n        private: {\n            options: channelOptions\n        },\n\n        listenerMap: {},\n\n        //Check for updates\n        /**\n         * Triggers update on sibling variables channel\n         * @param  {string|array} executedOpns operations which just happened\n         * @param  {*} response  response from the operation\n         * @param  {boolean} force  ignore all silence options and force refresh\n         */\n        refresh: function (executedOpns, response, force) {\n            var silent = channelOptions.silent;\n\n            var shouldSilence = silent === true;\n            if (_.isArray(silent) && executedOpns) {\n                shouldSilence = _.intersection(silent, executedOpns).length === silent.length;\n            }\n            if ($.isPlainObject(silent) && executedOpns) {\n                shouldSilence = _.intersection(silent.except, executedOpns).length !== executedOpns.length;\n            }\n\n            if (!shouldSilence || force === true) {\n                $(vent).trigger('dirty', { opn: executedOpns, response: response });\n                var me = this;\n                _.each(executedOpns, function (opn) {\n                    me.notify(opn, response);\n                });\n            }\n        },\n\n        notify: function (operation, value) {\n            var listeners = this.listenerMap[operation];\n            var params = {};\n            params[operation] = value;\n\n            _.each(listeners, function (listener) {\n                var target = listener.target;\n                if (_.isFunction(target)) {\n                    target.call(null, params);\n                } else if (target.trigger) {\n                    listener.target.trigger(config.events.react, params);\n                } else {\n                    throw new Error('Unknown listerer format for ' + operation);\n                }\n            });\n        },\n\n        /**\n         * Operation name & parameters to send to operations API\n         * @param  {string | object} operation Name of Operation. If array, needs to be in {operations: [{name: opn, params:[]}], serial: boolean}] format\n         * @param  {*} params (optional)   params to send to opertaion\n         * @param {option} options Supported options: {silent: Boolean}\n         * @return {$promise}\n         */\n        publish: function (operation, params, options) {\n            var me = this;\n            if ($.isPlainObject(operation) && operation.operations) {\n                var fn = (operation.serial) ? run.serial : run.parallel;\n                return fn.call(run, operation.operations)\n                        .then(function (response) {\n                            if (!params || !params.silent) {\n                                me.refresh.call(me, _.pluck(operation.operations, 'name'), response);\n                            }\n                        });\n            } else {\n                //TODO: check if interpolated\n                var opts = ($.isPlainObject(operation)) ? params : options;\n                return run.do.apply(run, arguments)\n                    .then(function (response) {\n                        if (!opts || !opts.silent) {\n                            me.refresh.call(me, [operation], response);\n                        }\n                    });\n            }\n            // console.log('operations publish', operation, params);\n        },\n\n        subscribe: function (operations, subscriber) {\n            // console.log('operations subscribe', operations, subscriber);\n            operations = [].concat(operations);\n            //use jquery to make event sink\n            //TODO: subscriber can be a function\n            if (!subscriber.on && !_.isFunction(subscriber)) {\n                subscriber = $(subscriber);\n            }\n\n            var id  = _.uniqueId('epichannel.operation');\n            var data = {\n                id: id,\n                target: subscriber\n            };\n\n            var me = this;\n\n            $.each(operations, function (index, opn) {\n                if (!me.listenerMap[opn]) {\n                    me.listenerMap[opn] = [];\n                }\n                me.listenerMap[opn] = me.listenerMap[opn].concat(data);\n            });\n\n            return id;\n        },\n        unsubscribe: function (operation, token) {\n            this.listenerMap[operation] = _.reject(this.listenerMap[operation], function (subs) {\n                return subs.id === token;\n            });\n        },\n        unsubscribeAll: function () {\n            this.listenerMap = {};\n        }\n    };\n    return $.extend(this, publicAPI);\n};\n","'use strict';\nmodule.exports = {\n    alias: 'i',\n    convert: function (value) {\n        return parseFloat(value, 10);\n    }\n};\n","'use strict';\nmodule.exports = {\n    s: function (val) {\n        return val + '';\n    },\n\n    upperCase: function (val) {\n        return (val + '').toUpperCase();\n    },\n    lowerCase: function (val) {\n        return (val + '').toLowerCase();\n    },\n    titleCase: function (val) {\n        val = val + '';\n        return val.replace(/\\w\\S*/g, function (txt) {return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    }\n};\n","'use strict';\nmodule.exports = {\n    list: function (val) {\n        return [].concat(val);\n    },\n    last: function (val) {\n        val = [].concat(val);\n        return val[val.length - 1];\n    },\n    first: function (val) {\n        val = [].concat(val);\n        return val[0];\n    },\n    previous: function (val) {\n        val = [].concat(val);\n        return (val.length <= 1) ? val[0] : val[val.length - 2];\n    }\n};\n","'use strict';\nmodule.exports = {\n    alias: function (name) {\n        //TODO: Fancy regex to match number formats here\n        return (name.indexOf('#') !== -1 || name.indexOf('0') !== -1);\n    },\n\n    parse: function (val) {\n        val+= '';\n        var isNegative = val.charAt(0) === '-';\n\n        val  = val.replace(/,/g, '');\n        var floatMatcher = /([-+]?[0-9]*\\.?[0-9]+)(K?M?B?%?)/i;\n        var results = floatMatcher.exec(val);\n        var number, suffix = '';\n        if (results && results[1]) {\n            number = results[1];\n        }\n        if (results && results[2]) {\n            suffix = results[2].toLowerCase();\n        }\n\n        switch (suffix) {\n            case '%':\n                number = number / 100;\n                break;\n            case 'k':\n                number = number * 1000;\n                break;\n            case 'm':\n                number = number * 1000000;\n                break;\n            case 'b':\n                number = number * 1000000000;\n                break;\n        }\n        number = parseFloat(number);\n        if (isNegative && number > 0) {\n            number = number * -1;\n        }\n        return number;\n    },\n\n    convert: (function (value) {\n        var scales = ['', 'K', 'M', 'B', 'T'];\n\n        function getDigits(value, digits) {\n            value = value === 0 ? 0 : roundTo(value, Math.max(0, digits - Math.ceil(Math.log(value) / Math.LN10)));\n\n            var TXT = '';\n            var numberTXT = value.toString();\n            var decimalSet = false;\n\n            for (var iTXT = 0; iTXT < numberTXT.length; iTXT++) {\n                TXT += numberTXT.charAt(iTXT);\n                if (numberTXT.charAt(iTXT) === '.') {\n                    decimalSet = true;\n                } else {\n                    digits--;\n                }\n\n                if (digits <= 0) {\n                    return TXT;\n                }\n            }\n\n            if (!decimalSet) {\n                TXT += '.';\n            }\n            while (digits > 0) {\n                TXT += '0';\n                digits--;\n            }\n            return TXT;\n        }\n\n        function addDecimals(value, decimals, minDecimals, hasCommas) {\n            hasCommas = hasCommas || true;\n            var numberTXT = value.toString();\n            var hasDecimals = (numberTXT.split('.').length > 1);\n            var iDec = 0;\n\n            if (hasCommas) {\n                for (var iChar = numberTXT.length - 1; iChar > 0; iChar--) {\n                    if (hasDecimals) {\n                        hasDecimals = (numberTXT.charAt(iChar) !== '.');\n                    } else {\n                        iDec = (iDec + 1) % 3;\n                        if (iDec === 0) {\n                            numberTXT = numberTXT.substr(0, iChar) + ',' + numberTXT.substr(iChar);\n                        }\n                    }\n                }\n\n            }\n            if (decimals > 0) {\n                var toADD;\n                if (numberTXT.split('.').length <= 1) {\n                    toADD = minDecimals;\n                    if (toADD > 0) {\n                        numberTXT += '.';\n                    }\n                } else {\n                    toADD = minDecimals - numberTXT.split('.')[1].length;\n                }\n\n                while (toADD > 0) {\n                    numberTXT += '0';\n                    toADD--;\n                }\n            }\n            return numberTXT;\n        }\n\n        function roundTo(value, digits) {\n            return Math.round(value * Math.pow(10, digits)) / Math.pow(10, digits);\n        }\n\n        function getSuffix(formatTXT) {\n            formatTXT = formatTXT.replace('.', '');\n            var fixesTXT = formatTXT.split(new RegExp('[0|,|#]+', 'g'));\n            return (fixesTXT.length > 1) ? fixesTXT[1].toString() : '';\n        }\n\n        function isCurrency(string) {\n            var s = $.trim(string);\n\n            if (s === '$' ||\n                s === 'â‚¬' ||\n                s === 'Â¥' ||\n                s === 'Â£' ||\n                s === 'â‚¡' ||\n                s === 'â‚±' ||\n                s === 'KÄ?' ||\n                s === 'kr' ||\n                s === 'Â¢' ||\n                s === 'â‚ª' ||\n                s === 'Æ’' ||\n                s === 'â‚©' ||\n                s === 'â‚«') {\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function format(number, formatTXT) {\n            if (_.isArray(number)) {\n                number = number[number.length - 1];\n            }\n            if (!_.isString(number) && !_.isNumber(number)) {\n                return number;\n            }\n\n            if (!formatTXT || formatTXT.toLowerCase() === 'default') {\n                return number.toString();\n            }\n\n            if (isNaN(number)) {\n                return '?';\n            }\n\n            //var formatTXT;\n            formatTXT = formatTXT.replace('&euro;', 'â‚¬');\n\n            // Divide +/- Number Format\n            var formats = formatTXT.split(';');\n            if (formats.length > 1) {\n                return format(Math.abs(number), formats[((number >= 0) ? 0 : 1)]);\n            }\n\n            // Save Sign\n            var sign = (number >= 0) ? '' : '-';\n            number = Math.abs(number);\n\n\n            var leftOfDecimal = formatTXT;\n            var d = leftOfDecimal.indexOf('.');\n            if (d > -1) {\n                leftOfDecimal = leftOfDecimal.substring(0, d);\n            }\n\n            var normalized = leftOfDecimal.toLowerCase();\n            var index = normalized.lastIndexOf('s');\n            var isShortFormat = index > -1;\n\n            if (isShortFormat) {\n                var nextChar = leftOfDecimal.charAt(index + 1);\n                if (nextChar === ' ') {\n                    isShortFormat = false;\n                }\n            }\n\n            var leadingText = isShortFormat ? formatTXT.substring(0, index) : '';\n            var rightOfPrefix = isShortFormat ? formatTXT.substr(index + 1) : formatTXT.substr(index);\n\n            //first check to make sure 's' is actually short format and not part of some leading text\n            if (isShortFormat) {\n                var shortFormatTest = /[0-9#*]/;\n                var shortFormatTestResult = rightOfPrefix.match(shortFormatTest);\n                if (!shortFormatTestResult || shortFormatTestResult.length === 0) {\n                    //no short format characters so this must be leading text ie. 'weeks '\n                    isShortFormat = false;\n                    leadingText = '';\n                }\n            }\n\n            //if (formatTXT.charAt(0) == 's')\n            if (isShortFormat) {\n                var valScale = number === 0 ? 0 : Math.floor(Math.log(Math.abs(number)) / (3 * Math.LN10));\n                valScale = ((number / Math.pow(10, 3 * valScale)) < 1000) ? valScale : (valScale + 1);\n                valScale = Math.max(valScale, 0);\n                valScale = Math.min(valScale, 4);\n                number = number / Math.pow(10, 3 * valScale);\n                //if (!isNaN(Number(formatTXT.substr(1) ) ) )\n\n                if (!isNaN(Number(rightOfPrefix)) && rightOfPrefix.indexOf('.') === -1) {\n                    var limitDigits = Number(rightOfPrefix);\n                    if (number < Math.pow(10, limitDigits)) {\n                        if (isCurrency(leadingText)) {\n                            return sign + leadingText + getDigits(number, Number(rightOfPrefix)) + scales[valScale];\n                        } else {\n                            return leadingText + sign + getDigits(number, Number(rightOfPrefix)) + scales[valScale];\n                        }\n                    } else {\n                        if (isCurrency(leadingText)) {\n                            return sign + leadingText + Math.round(number) + scales[valScale];\n                        } else {\n                            return leadingText + sign + Math.round(number) + scales[valScale];\n                        }\n                    }\n                } else {\n                    //formatTXT = formatTXT.substr(1);\n                    formatTXT = formatTXT.substr(index + 1);\n                    var SUFFIX = getSuffix(formatTXT);\n                    formatTXT = formatTXT.substr(0, formatTXT.length - SUFFIX.length);\n\n                    var valWithoutLeading = format(((sign === '') ? 1 : -1) * number, formatTXT) + scales[valScale] + SUFFIX;\n                    if (isCurrency(leadingText) && sign !== '') {\n                        valWithoutLeading = valWithoutLeading.substr(sign.length);\n                        return sign + leadingText + valWithoutLeading;\n                    }\n\n                    return leadingText + valWithoutLeading;\n                }\n            }\n\n            var subFormats = formatTXT.split('.');\n            var decimals;\n            var minDecimals;\n            if (subFormats.length > 1) {\n                decimals = subFormats[1].length - subFormats[1].replace(new RegExp('[0|#]+', 'g'), '').length;\n                minDecimals = subFormats[1].length - subFormats[1].replace(new RegExp('0+', 'g'), '').length;\n                formatTXT = subFormats[0] + subFormats[1].replace(new RegExp('[0|#]+', 'g'), '');\n            } else {\n                decimals = 0;\n            }\n\n            var fixesTXT = formatTXT.split(new RegExp('[0|,|#]+', 'g'));\n            var preffix = fixesTXT[0].toString();\n            var suffix = (fixesTXT.length > 1) ? fixesTXT[1].toString() : '';\n\n            number = number * ((formatTXT.split('%').length > 1) ? 100 : 1);\n            //            if (formatTXT.indexOf('%') !== -1) number = number * 100;\n            number = roundTo(number, decimals);\n\n            sign = (number === 0) ? '' : sign;\n\n            var hasCommas = (formatTXT.substr(formatTXT.length - 4 - suffix.length, 1) === ',');\n            var formatted = sign + preffix + addDecimals(number, decimals, minDecimals, hasCommas) + suffix;\n\n            //  console.log(originalNumber, originalFormat, formatted)\n            return formatted;\n        }\n\n        return format;\n    }())\n};\n","'use strict';\nvar BaseView = require('./default-input-node');\n\nmodule.exports = BaseView.extend({\n\n    propertyHandlers: [\n\n    ],\n\n    getUIValue: function () {\n        var $el = this.$el;\n        //TODO: file a issue for the vensim manager to convert trues to 1s and set this to true and false\n\n        var offVal =  ($el.data('f-off') !== undefined) ? $el.data('f-off') : 0;\n        //attr = initial value, prop = current value\n        var onVal = ($el.attr('value') !== undefined) ? $el.prop('value'): 1;\n\n        var val = ($el.is(':checked')) ? onVal : offVal;\n        return val;\n    },\n    initialize: function () {\n        BaseView.prototype.initialize.apply(this, arguments);\n    }\n}, { selector: ':checkbox,:radio' });\n","'use strict';\nvar config = require('../../config');\nvar BaseView = require('./default-node');\n\nmodule.exports = BaseView.extend({\n    propertyHandlers: [],\n\n    uiChangeEvent: 'change',\n    getUIValue: function () {\n        return this.$el.val();\n    },\n\n    initialize: function () {\n        var me = this;\n        var propName = this.$el.data(config.binderAttr);\n\n        if (propName) {\n            this.$el.off(this.uiChangeEvent).on(this.uiChangeEvent, function () {\n                var val = me.getUIValue();\n\n                var params = {};\n                params[propName] = val;\n\n                me.$el.trigger(config.events.trigger, params);\n            });\n        }\n        BaseView.prototype.initialize.apply(this, arguments);\n    }\n}, { selector: 'input, select' });\n","'use strict';\n\nvar BaseView = require('./base');\n\nmodule.exports = BaseView.extend({\n    propertyHandlers: [\n\n    ],\n\n    initialize: function () {\n    }\n}, { selector: '*' });\n","'use strict';\n\n// Attributes which are just parameters to others and can just be ignored\nmodule.exports = {\n\n    target: '*',\n\n    test: /^(?:model|convert)$/i,\n\n    handle: $.noop,\n\n    init: function () {\n        return false;\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: function (attr, $node) {\n        return (attr.indexOf('on-init') === 0);\n    },\n\n    init: function (attr, value) {\n        attr = attr.replace('on-init', '');\n        var me = this;\n        $(function () {\n            var listOfOperations = _.invoke(value.split('|'), 'trim');\n            listOfOperations = listOfOperations.map(function (value) {\n                var fnName = value.split('(')[0];\n                var params = value.substring(value.indexOf('(') + 1, value.indexOf(')'));\n                var args = ($.trim(params) !== '') ? params.split(',') : [];\n                return { name: fnName, params: args };\n            });\n\n            me.trigger('f.ui.operate', { operations: listOfOperations, serial: true });\n        });\n        return false; //Don't bother binding on this attr. NOTE: Do readonly, true instead?;\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: function (attr, $node) {\n        return (attr.indexOf('on-') === 0);\n    },\n\n    init: function (attr, value) {\n        attr = attr.replace('on-', '');\n        var me = this;\n        this.off(attr).on(attr, function () {\n            var listOfOperations = _.invoke(value.split('|'), 'trim');\n            listOfOperations = listOfOperations.map(function (value) {\n                var fnName = value.split('(')[0];\n                var params = value.substring(value.indexOf('(') + 1, value.indexOf(')'));\n                var args = ($.trim(params) !== '') ? params.split(',') : [];\n                return { name: fnName, params: args };\n            });\n\n            me.trigger('f.ui.operate', { operations: listOfOperations, serial: true });\n        });\n        return false; //Don't bother binding on this attr. NOTE: Do readonly, true instead?;\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: ':checkbox,:radio',\n\n    test: 'bind',\n\n    handle: function (value) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        var settableValue = this.attr('value'); //initial value\n        /*jslint eqeq: true*/\n        var isChecked = (settableValue !== undefined) ? (settableValue == value) : !!value;\n        this.prop('checked', isChecked);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n    target: 'input, select',\n\n    test: 'bind',\n\n    handle: function (value) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        this.val(value);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    test: 'class',\n\n    target: '*',\n\n    handle: function (value, prop) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n\n        var addedClasses = this.data('added-classes');\n        if (!addedClasses) {\n            addedClasses = {};\n        }\n        if (addedClasses[prop]) {\n            this.removeClass(addedClasses[prop]);\n        }\n\n        if (_.isNumber(value)) {\n            value = 'value-' + value;\n        }\n        addedClasses[prop] = value;\n        //Fixme: prop is always \"class\"\n        this.addClass(value);\n        this.data('added-classes', addedClasses);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n    target: '*',\n\n    test: /^(?:checked|selected|async|autofocus|autoplay|controls|defer|ismap|loop|multiple|open|required|scoped)$/i,\n\n    handle: function (value, prop) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        /*jslint eqeq: true*/\n        var val = (this.attr('value')) ? (value == this.prop('value')) : !!value;\n        this.prop(prop, val);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: /^(?:disabled|hidden|readonly)$/i,\n\n    handle: function (value, prop) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        this.prop(prop, !value);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: 'bind',\n\n    handle: function (value) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        this.html(value);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    test: '*',\n\n    target: '*',\n\n    handle: function (value, prop) {\n        this.prop(prop, value);\n    }\n};\n","'use strict';\n\nvar extend = function (protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n        child = protoProps.constructor;\n    } else {\n        child = function () { return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () { this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) {\n        _.extend(child.prototype, protoProps);\n    }\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n};\n\nvar View = function (options) {\n    this.$el = $(options.el);\n    this.el = options.el;\n    this.initialize.apply(this, arguments);\n\n};\n\n_.extend(View.prototype, {\n    initialize: function () {},\n});\n\nView.extend = extend;\n\nmodule.exports = View;\n"]}