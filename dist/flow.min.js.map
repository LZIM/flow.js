{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/app.js","src/flow.js","src/dom/dom-manager.js","src/channels/run-channel.js","src/config.js","src/dom/nodes/node-manager.js","src/dom/attributes/attribute-manager.js","src/converters/converter-manager.js","src/utils/parse-utils.js","src/utils/dom.js","src/dom/plugins/auto-update-bindings.js","src/channels/variables-channel.js","src/channels/operations-channel.js","src/converters/number-converter.js","src/converters/string-converter.js","src/converters/array-converter.js","src/converters/numberformat-converter.js","src/dom/nodes/input-checkbox-node.js","src/dom/nodes/default-input-node.js","src/dom/nodes/default-node.js","src/dom/attributes/no-op-attr.js","src/dom/attributes/events/init-event-attr.js","src/dom/attributes/events/default-event-attr.js","src/dom/attributes/foreach/default-foreach-attr.js","src/dom/attributes/binds/checkbox-radio-bind-attr.js","src/dom/attributes/binds/input-bind-attr.js","src/dom/attributes/class-attr.js","src/dom/attributes/positive-boolean-attr.js","src/dom/attributes/negative-boolean-attr.js","src/dom/attributes/binds/default-bind-attr.js","src/dom/attributes/default-attr.js","src/dom/nodes/base.js"],"names":["window","Flow","require","version","domManager","Channel","module","exports","dom","initialize","config","model","$","data","defaults","channel","run","account","project","operations","root","plugins","autoUpdateBindings","options","extend","this","$root","initFn","opnSilent","silent","isInitOperationSilent","_","isArray","contains","preFetchVariables","me","off","on","variables","refresh","nodeManager","attrManager","converterManager","parseUtils","domUtils","autoUpdatePlugin","expr","prefix","obj","$this","dataprops","keys","match","find","attr","indexOf","webcomponent","nodeName","getMatchingElements","matchedElements","is","add","getElementOrError","element","context","get","console","error","Error","publicAPI","nodes","attributes","converters","private","unbindElement","$el","without","Handler","getHandler","h","handle","el","removeEvents","each","index","nodeMap","wantedPrefix","replace","handler","stopListening","call","subsid","subs","unsubscribe","bindElement","push","subscribe","varsToBind","length","newsubs","concat","attrBindings","nonBatchableVariables","attrVal","value","isBindableAttr","init","withConv","invoke","split","shift","binding","commaRegex","batch","topics","bindAll","elementsToBind","unbindAll","elementsToUnbind","trigger","events","evt","parsedData","target","attrConverters","getConvertersList","val","key","trim","parse","toImplicitType","bind","publish","react","bindings","toconvert","variableName","pick","convert","prop","toLowerCase","convertedValue","isPlainObject","opn","params","map","VarsChannel","OperationsChannel","rm","F","manager","RunManager","rs","$creationPromise","getRun","currentPromise","createAndThen","fn","wrap","func","passedInParams","toArray","arguments","slice","then","apply","name","isFunction","originalVariablesFn","vs","vent","defaultAttr","binderAttr","normalize","selector","toMatch","node","isString","list","register","unshift","currentHandler","i","splice","defaultHandlers","reverse","handlersList","attributeMatcher","nodeMatcher","test","matchAttr","matchExpr","attrMatch","isRegExp","matchNode","nodeFilter","filter","attrFilter","filtered","select","property","alias","converter","acceptList","ret","matchConverter","isRegex","normalized","currentConverter","getConverter","currentValue","convertArray","converterName","v","convertObject","mapValues","converted","defaultconverters","c","rbrace","charAt","substring","isNumeric","parseJSON","matchValue","$parentEl","closest","MutationObserver","observer","mutations","forEach","mutation","added","addedNodes","removed","removedNodes","mutconfig","childList","subtree","characterData","observe","autoFetch","channelOptions","currentData","isEqual","getInnerVariables","str","inner","interpolate","variablesToInterpolate","values","interpolationMap","interpolated","outerVariable","originalOuter","innerVariable","thisval","undefined","op","lastCheckTime","now","subscriptions","unfetched","getSubscribers","topic","getAllTopics","pluck","flatten","uniq","getTopicDependencies","innerList","vname","updateAndCheckForRefresh","TIME_BETWEEN_CHECKS","MAX_ITEMS_IN_QUEUE","fetch","changed","notify","variablesList","innerVariables","getVariables","vars","query","changeSet","oldValue","interpolatedName","ip","changeObj","force","changedVariables","shouldSilence","intersection","except","Deferred","resolve","promise","callTarget","object","subscription","matchingTopics","size","variable","attrs","it","toSave","save","subscriber","id","uniqueId","token","reject","unsubscribeAll","listenerMap","executedOpns","response","operation","listeners","listener","serial","parallel","opts","do","parseFloat","s","upperCase","toUpperCase","lowerCase","titleCase","txt","substr","item","oldfn","newfn","isNegative","floatMatcher","results","exec","number","suffix","getDigits","digits","roundTo","Math","max","ceil","log","LN10","TXT","numberTXT","toString","decimalSet","iTXT","addDecimals","decimals","minDecimals","hasCommas","hasDecimals","iDec","iChar","toADD","round","pow","getSuffix","formatTXT","fixesTXT","RegExp","isCurrency","string","format","isNumber","isNaN","formats","abs","sign","leftOfDecimal","d","lastIndexOf","isShortFormat","nextChar","leadingText","rightOfPrefix","shortFormatTest","shortFormatTestResult","valScale","floor","min","Number","SUFFIX","valWithoutLeading","scales","limitDigits","subFormats","preffix","formatted","BaseView","propertyHandlers","getUIValue","offVal","onVal","prototype","uiChangeEvent","propName","noop","listOfOperations","fnName","args","$loopTemplate","children","$me","empty","dataval","datakey","clone","newNode","templated","template","oldHTML","html","cleanedHTML","append","settableValue","isChecked","addedClasses","removeClass","addClass","valueToTemplate","protoProps","staticProps","parent","child","has","constructor","Surrogate","__super__","View"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","window.Flow = require('./flow.js');\nwindow.Flow.version = '<%= version %>'; //populated by grunt\n","'use strict';\n\nvar domManager = require('./dom/dom-manager');\nvar Channel = require('./channels/run-channel');\n\nmodule.exports = {\n    dom: domManager,\n\n    initialize: function (config) {\n        var model = $('body').data('f-model');\n\n        var defaults = {\n            channel: {\n                run: {\n                    account: '',\n                    project: '',\n                    model: model,\n\n                    operations: {\n                    }\n                }\n            },\n            dom: {\n                root: 'body',\n                plugins: {\n                    autoUpdateBindings: true\n                }\n            }\n        };\n\n        var options = $.extend(true, {}, defaults, config);\n        if (config && config.channel && (config.channel instanceof Channel)) {\n            this.channel = config.channel;\n        } else {\n            this.channel = new Channel(options.channel);\n        }\n\n        var $root = $(options.dom.root);\n        var initFn = $root.data('f-on-init');\n        var opnSilent = options.channel.run.operations.silent;\n        var isInitOperationSilent = initFn && (opnSilent === true || (_.isArray(opnSilent) && _.contains(opnSilent, initFn)));\n        var preFetchVariables = !initFn || isInitOperationSilent;\n        var me = this;\n\n        if (preFetchVariables) {\n            $root.off('f.domready').on('f.domready', function () {\n                me.channel.variables.refresh(null, true);\n            });\n        }\n\n        domManager.initialize($.extend(true, {\n            channel: this.channel\n        }, options.dom));\n    }\n};\n","module.exports = (function () {\n    'use strict';\n    var config = require('../config');\n\n    var nodeManager = require('./nodes/node-manager');\n    var attrManager = require('./attributes/attribute-manager');\n    var converterManager = require('../converters/converter-manager');\n\n    var parseUtils = require('../utils/parse-utils');\n    var domUtils = require('../utils/dom');\n\n    var autoUpdatePlugin = require('./plugins/auto-update-bindings');\n\n    //Jquery selector to return everything which has a f- property set\n    $.expr[':'][config.prefix] = function (obj) {\n        var $this = $(obj);\n        var dataprops = _.keys($this.data());\n\n        var match = _.find(dataprops, function (attr) {\n            return (attr.indexOf(config.prefix) === 0);\n        });\n\n        return !!(match);\n    };\n\n    $.expr[':'].webcomponent = function (obj) {\n        return obj.nodeName.indexOf('-') !== -1;\n    };\n\n    var getMatchingElements = function (root) {\n        var $root = $(root);\n        var matchedElements = $root.find(':' + config.prefix);\n        if ($root.is(':' + config.prefix)) {\n            matchedElements = matchedElements.add($root);\n        }\n        return matchedElements;\n    };\n\n    var getElementOrError = function (element, context) {\n        if (element instanceof $) {\n            element = element.get(0);\n        }\n        if (!element || !element.nodeName) {\n            console.error(context, 'Expected to get DOM Element, got ', element);\n            throw new Error(context + ': Expected to get DOM Element, got' + (typeof element));\n        }\n        return element;\n    };\n\n    var publicAPI = {\n\n        nodes: nodeManager,\n        attributes: attrManager,\n        converters: converterManager,\n        //utils for testing\n        private: {\n            matchedElements: []\n        },\n\n        unbindElement: function (element, channel) {\n            if (!channel) {\n                channel = this.options.channel.variables;\n            }\n            element = getElementOrError(element);\n            var $el = $(element);\n            if (!$el.is(':' + config.prefix)) {\n                return false;\n            }\n            this.private.matchedElements = _.without(this.private.matchedElements, element);\n\n            //FIXME: have to readd events to be able to remove them. Ugly\n            var Handler = nodeManager.getHandler($el);\n            var h = new Handler.handle({\n                el: element\n            });\n            if (h.removeEvents) {\n                h.removeEvents();\n            }\n\n            $(element.attributes).each(function (index, nodeMap) {\n                var attr = nodeMap.nodeName;\n                var wantedPrefix = 'data-f-';\n                if (attr.indexOf(wantedPrefix) === 0) {\n                    attr = attr.replace(wantedPrefix, '');\n\n                    var handler = attrManager.getHandler(attr, $el);\n                    if (handler.stopListening) {\n                        handler.stopListening.call($el, attr);\n                    }\n                }\n            });\n\n            var subsid = $el.data('f-subscription-id') || [];\n            _.each(subsid, function (subs) {\n                channel.unsubscribe(subs);\n            });\n        },\n\n        bindElement: function (element, channel) {\n            if (!channel) {\n                channel = this.options.channel.variables;\n            }\n            element = getElementOrError(element);\n            var $el = $(element);\n            if (!$el.is(':' + config.prefix)) {\n                return false;\n            }\n            if (!_.contains(this.private.matchedElements, element)) {\n                this.private.matchedElements.push(element);\n            }\n\n            //Send to node manager to handle ui changes\n            var Handler = nodeManager.getHandler($el);\n            new Handler.handle({\n                el: element\n            });\n\n            var subscribe = function (channel, varsToBind, $el, options) {\n                if (!varsToBind || !varsToBind.length) {\n                    return false;\n                }\n                var subsid = channel.subscribe(varsToBind, $el, options);\n                var newsubs = ($el.data('f-subscription-id') || []).concat(subsid);\n                $el.data('f-subscription-id', newsubs);\n            };\n\n            var attrBindings = [];\n            var nonBatchableVariables = [];\n            //NOTE: looping through attributes instead of .data because .data automatically camelcases properties and make it hard to retrvieve\n            $(element.attributes).each(function (index, nodeMap) {\n                var attr = nodeMap.nodeName;\n                var attrVal = nodeMap.value;\n\n                var wantedPrefix = 'data-f-';\n                if (attr.indexOf(wantedPrefix) === 0) {\n                    attr = attr.replace(wantedPrefix, '');\n\n                    var handler = attrManager.getHandler(attr, $el);\n                    var isBindableAttr = true;\n                    if (handler && handler.init) {\n                        isBindableAttr = handler.init.call($el, attr, attrVal);\n                    }\n\n                    if (isBindableAttr) {\n                        //Convert pipes to converter attrs\n                        var withConv = _.invoke(attrVal.split('|'), 'trim');\n                        if (withConv.length > 1) {\n                            attrVal = withConv.shift();\n                            $el.data('f-convert-' + attr, withConv);\n                        }\n\n                        var binding = { attr: attr };\n                        var commaRegex = /,(?![^\\[]*\\])/;\n                        if (attrVal.indexOf('<%') !== -1) {\n                            //Assume it's templated for later use\n\n                        } else if (attrVal.split(commaRegex).length > 1) {\n                            var varsToBind = _.invoke(attrVal.split(commaRegex), 'trim');\n                            subscribe(channel, varsToBind, $el, { batch: true });\n                            binding.topics = varsToBind;\n                        } else {\n                            binding.topics = [attrVal];\n                            nonBatchableVariables.push(attrVal);\n                        }\n                        attrBindings.push(binding);\n                    }\n                }\n            });\n            $el.data('attr-bindings', attrBindings);\n            if (nonBatchableVariables.length) {\n                // console.log('subscribe', nonBatchableVariables, $el.get(0))\n                subscribe(channel, nonBatchableVariables, $el, { batch: false });\n            }\n        },\n\n        /**\n         * Bind all provided elements\n         * @param  {Array|jQuerySelector} elementsToBind (Optional) If not provided uses the default root provided at initialization\n         */\n        bindAll: function (elementsToBind) {\n            if (!elementsToBind) {\n                elementsToBind = getMatchingElements(this.options.root);\n            } else if (!_.isArray(elementsToBind)) {\n                elementsToBind = getMatchingElements(elementsToBind);\n            }\n\n            var me = this;\n            //parse through dom and find everything with matching attributes\n            $.each(elementsToBind, function (index, element) {\n                me.bindElement.call(me, element, me.options.channel.variables);\n            });\n        },\n        /**\n         * Unbind provided elements\n         * @param  {Array} elementsToUnbind (Optional). If not provided unbinds everything\n         */\n        unbindAll: function (elementsToUnbind) {\n            var me = this;\n            if (!elementsToUnbind) {\n                elementsToUnbind = this.private.matchedElements;\n            }\n            $.each(elementsToUnbind, function (index, element) {\n                me.unbindElement.call(me, element, me.options.channel.variables);\n            });\n        },\n\n        initialize: function (options) {\n            var defaults = {\n                root: 'body',\n                channel: null,\n                plugins: {}\n            };\n            $.extend(defaults, options);\n\n            var channel = defaults.channel;\n\n            this.options = defaults;\n\n            var me = this;\n            var $root = $(defaults.root);\n            $(function () {\n                me.bindAll();\n                $root.trigger('f.domready');\n\n                //Attach listeners\n                // Listen for changes to ui and publish to api\n                $root.off(config.events.trigger).on(config.events.trigger, function (evt, data) {\n                    var parsedData = {}; //if not all subsequent listeners will get the modified data\n\n                    var $el = $(evt.target);\n                    var attrConverters =  domUtils.getConvertersList($el, 'bind');\n\n                    _.each(data, function (val, key) {\n                        key = key.split('|')[0].trim(); //in case the pipe formatting syntax was used\n                        val = converterManager.parse(val, attrConverters);\n                        parsedData[key] = parseUtils.toImplicitType(val);\n\n                        $el.trigger('f.convert', { bind: val });\n                    });\n\n                    channel.variables.publish(parsedData);\n                });\n\n                // Listen for changes from api and update ui\n                $root.off(config.events.react).on(config.events.react, function (evt, data) {\n                    // console.log(evt.target, data, \"root on\");\n                    var $el = $(evt.target);\n                    var bindings = $el.data('attr-bindings');\n\n                    var toconvert = {};\n                    $.each(data, function (variableName, value) {\n                        _.each(bindings, function (binding) {\n                            if (_.contains(binding.topics, variableName)) {\n                                if (binding.topics.length > 1) {\n                                    toconvert[binding.attr] = _.pick(data, binding.topics);\n                                } else {\n                                    toconvert[binding.attr] = value;\n                                }\n                            }\n                        });\n                    });\n                    $el.trigger('f.convert', toconvert);\n                });\n\n                // data = {proptoupdate: value} || just a value (assumes 'bind' if so)\n                $root.off('f.convert').on('f.convert', function (evt, data) {\n                    var $el = $(evt.target);\n                    var convert = function (val, prop) {\n                        prop = prop.toLowerCase();\n                        var attrConverters =  domUtils.getConvertersList($el, prop);\n                        var handler = attrManager.getHandler(prop, $el);\n                        var convertedValue = converterManager.convert(val, attrConverters);\n                        handler.handle.call($el, convertedValue, prop);\n                    };\n\n                    if ($.isPlainObject(data)) {\n                        _.each(data, convert);\n                    } else {\n                        convert(data, 'bind');\n                    }\n                });\n\n                $root.off('f.ui.operate').on('f.ui.operate', function (evt, data) {\n                    data = $.extend(true, {}, data); //if not all subsequent listeners will get the modified data\n                    _.each(data.operations, function (opn) {\n                       opn.params = _.map(opn.params, function (val) {\n                           return parseUtils.toImplicitType($.trim(val));\n                       });\n                    });\n                    channel.operations.publish(data);\n                });\n\n                if (me.options.plugins.autoUpdateBindings) {\n                    autoUpdatePlugin($root.get(0), me);\n                }\n            });\n        }\n    };\n\n    return $.extend(this, publicAPI);\n}());\n","'use strict';\n\nvar VarsChannel = require('./variables-channel');\nvar OperationsChannel = require('./operations-channel');\n\nmodule.exports = function (options) {\n    var defaults = {\n        run: {\n            variables: {\n\n            },\n            operations: {\n\n            }\n        }\n    };\n    var config = $.extend(true, {}, defaults, options);\n\n    var rm = new F.manager.RunManager(config);\n    var rs = rm.run;\n\n    var $creationPromise = rm.getRun();\n    rs.currentPromise = $creationPromise;\n\n    var createAndThen = function (fn, context) {\n        return _.wrap(fn, function (func) {\n            var passedInParams = _.toArray(arguments).slice(1);\n            return rs.currentPromise.then(function () {\n                rs.currentPromise = func.apply(context, passedInParams);\n                return rs.currentPromise;\n            });\n        });\n    };\n\n    //Make sure nothing happens before the run is created\n    _.each(rs, function (value, name) {\n        if (_.isFunction(value) && name !== 'variables'  && name !== 'create') {\n            rs[name] = createAndThen(value, rs);\n        }\n    });\n\n    var originalVariablesFn = rs.variables;\n    rs.variables = function () {\n        var vs = originalVariablesFn.apply(rs, arguments);\n        _.each(vs, function (value, name) {\n            if (_.isFunction(value)) {\n                vs[name] = createAndThen(value, vs);\n            }\n        });\n        return vs;\n    };\n\n    this.run = rs;\n    this.variables = new VarsChannel($.extend(true, {}, config.run.variables, { run: rs, vent: this }));\n    this.operations = new OperationsChannel($.extend(true, {}, config.run.operations, { run: rs, vent: this }));\n};\n","module.exports = {\n    prefix: 'f',\n    defaultAttr: 'bind',\n\n    binderAttr: 'f-bind',\n\n    events: {\n        trigger: 'update.f.ui',\n        react: 'update.f.model'\n    }\n\n};\n","'use strict';\n\nvar normalize = function (selector, handler) {\n    if (_.isFunction(handler)) {\n        handler = {\n            handle: handler\n        };\n    }\n    if (!selector) {\n        selector = '*';\n    }\n    handler.selector = selector;\n    return handler;\n};\n\nvar match = function (toMatch, node) {\n    if (_.isString(toMatch)) {\n        return toMatch === node.selector;\n    } else {\n        return $(toMatch).is(node.selector);\n    }\n};\n\nvar nodeManager = {\n    list: [],\n\n    /**\n     * Add a new node handler\n     * @param  {string} selector jQuery-compatible selector to use to match nodes\n     * @param  {function} handler  Handlers are new-able functions. They will be called with $el as context.? TODO: Think this through\n     */\n    register: function (selector, handler) {\n        this.list.unshift(normalize(selector, handler));\n    },\n\n    getHandler: function (selector) {\n        return _.find(this.list, function (node) {\n            return match(selector, node);\n        });\n    },\n\n    replace: function (selector, handler) {\n        var index;\n        _.each(this.list, function (currentHandler, i) {\n            if (selector === currentHandler.selector) {\n                index = i;\n                return false;\n            }\n        });\n        this.list.splice(index, 1, normalize(selector, handler));\n    }\n};\n\n//bootstraps\nvar defaultHandlers = [\n    require('./input-checkbox-node'),\n    require('./default-input-node'),\n    require('./default-node')\n];\n_.each(defaultHandlers.reverse(), function (handler) {\n    nodeManager.register(handler.selector, handler);\n});\n\nmodule.exports = nodeManager;\n","'use strict';\n\nvar defaultHandlers = [\n    require('./no-op-attr'),\n    require('./events/init-event-attr'),\n    require('./events/default-event-attr'),\n    require('./foreach/default-foreach-attr'),\n    require('./binds/checkbox-radio-bind-attr'),\n    require('./binds/input-bind-attr'),\n    require('./class-attr'),\n    require('./positive-boolean-attr'),\n    require('./negative-boolean-attr'),\n    require('./binds/default-bind-attr'),\n    require('./default-attr')\n];\n\nvar handlersList = [];\n\nvar normalize = function (attributeMatcher, nodeMatcher, handler) {\n    if (!nodeMatcher) {\n        nodeMatcher = '*';\n    }\n    if (_.isFunction(handler)) {\n        handler = {\n            handle: handler\n        };\n    }\n    return $.extend(handler, { test: attributeMatcher, target: nodeMatcher });\n};\n\n$.each(defaultHandlers, function (index, handler) {\n    handlersList.push(normalize(handler.test, handler.target, handler));\n});\n\n\nvar matchAttr = function (matchExpr, attr, $el) {\n    var attrMatch;\n\n    if (_.isString(matchExpr)) {\n        attrMatch = (matchExpr === '*' || (matchExpr.toLowerCase() === attr.toLowerCase()));\n    } else if (_.isFunction(matchExpr)) {\n        //TODO: remove element selectors from attributes\n        attrMatch = matchExpr(attr, $el);\n    } else if (_.isRegExp(matchExpr)) {\n        attrMatch = attr.match(matchExpr);\n    }\n    return attrMatch;\n};\n\nvar matchNode = function (target, nodeFilter) {\n    return (_.isString(nodeFilter)) ? (nodeFilter === target) : nodeFilter.is(target);\n};\n\nmodule.exports = {\n    list: handlersList,\n    /**\n     * Add a new attribute handler\n     * @param  {string|function|regex} attributeMatcher Description of which attributes to match\n     * @param  {string} nodeMatcher      Which nodes to all attributes to. Use jquery Selector syntax\n     * @param  {function|object} handler    Handler can either be a function (The function will be called with $element as context, and attribute value + name), or an object with {init: fn,  handle: fn}. The init function will be called when page loads; use this to define event handlers\n     */\n    register: function (attributeMatcher, nodeMatcher, handler) {\n        handlersList.unshift(normalize.apply(null, arguments));\n    },\n\n    /**\n     * Find an attribute matcher matching some criteria\n     * @param  {string} attrFilter attribute to match\n     * @param  {string | $el} nodeFilter node to match\n     * @return {array|null}\n     */\n    filter: function (attrFilter, nodeFilter) {\n        var filtered = _.select(handlersList, function (handler) {\n            return matchAttr(handler.test, attrFilter);\n        });\n        if (nodeFilter) {\n            filtered = _.select(filtered, function (handler) {\n                return matchNode(handler.target, nodeFilter);\n            });\n        }\n        return filtered;\n    },\n\n    replace: function (attrFilter, nodeFilter, handler) {\n        var index;\n        _.each(handlersList, function (currentHandler, i) {\n            if (matchAttr(currentHandler.test, attrFilter) && matchNode(currentHandler.target, nodeFilter)) {\n                index = i;\n                return false;\n            }\n        });\n        handlersList.splice(index, 1, normalize(attrFilter, nodeFilter, handler));\n    },\n\n    getHandler: function (property, $el) {\n        var filtered = this.filter(property, $el);\n        //There could be multiple matches, but the top first has the most priority\n        return filtered[0];\n    }\n};\n\n","'use strict';\n\n//TODO: Make all underscore filters available\n\nvar normalize = function (alias, converter, acceptList) {\n    var ret = [];\n    //nomalize('flip', fn)\n    if (_.isFunction(converter)) {\n        ret.push({\n            alias: alias,\n            convert: converter,\n            acceptList: acceptList\n        });\n    } else if ($.isPlainObject(converter) && converter.convert) {\n        converter.alias = alias;\n        converter.acceptList = acceptList;\n        ret.push(converter);\n    } else if ($.isPlainObject(alias)) {\n        //normalize({alias: 'flip', convert: function})\n        if (alias.convert) {\n            ret.push(alias);\n        } else {\n            // normalize({flip: fun})\n            $.each(alias, function (key, val) {\n                ret.push({\n                    alias: key,\n                    convert: val,\n                    acceptList: acceptList\n                });\n            });\n        }\n    }\n    return ret;\n};\n\nvar matchConverter = function (alias, converter) {\n    if (_.isString(converter.alias)) {\n        return alias === converter.alias;\n    } else if (_.isFunction(converter.alias)) {\n        return converter.alias(alias);\n    } else if (_.isRegex(converter.alias)) {\n        return converter.alias.match(alias);\n    }\n    return false;\n};\n\nvar converterManager = {\n    private: {\n        matchConverter: matchConverter\n    },\n\n    list: [],\n    /**\n     * Add a new attribute converter\n     * @param  {string|function|regex} alias formatter name\n     * @param  {function|object} converter    converter can either be a function, which will be called with the value, or an object with {alias: '', parse: $.noop, convert: $.noop}\n     * @param {Boolean} acceptList decides if the converter is a 'list' converter or not; list converters take in arrays as inputs, others expect single values.\n     */\n    register: function (alias, converter, acceptList) {\n        var normalized = normalize(alias, converter, acceptList);\n        this.list = normalized.concat(this.list);\n    },\n\n    replace: function (alias, converter) {\n        var index;\n        _.each(this.list, function (currentConverter, i) {\n            if (matchConverter(alias, currentConverter)) {\n                index = i;\n                return false;\n            }\n        });\n        this.list.splice(index, 1, normalize(alias, converter)[0]);\n    },\n\n    getConverter: function (alias) {\n        return _.find(this.list, function (converter) {\n            return matchConverter(alias, converter);\n        });\n    },\n\n    /**\n     * Pipes the value sequentially through a list of provided converters\n     * @param  {*} value Input for the converter to tag\n     * @param  {Array|Object} list  list of converters (maps to converter alias)\n     * @return {*}       converted value\n     */\n    convert: function (value, list) {\n        if (!list || !list.length) {\n            return value;\n        }\n        list = [].concat(list);\n        list = _.invoke(list, 'trim');\n\n        var currentValue = value;\n        var me = this;\n\n        var convertArray = function (converter, val, converterName) {\n            return _.map(val, function (v) {\n                return converter.convert(v, converterName);\n            });\n        };\n        var convertObject = function (converter, value, converterName) {\n            return _.mapValues(value, function (val, key) {\n               return convert(converter, val, converterName);\n           });\n        };\n        var convert = function (converter, value, converterName) {\n            var converted;\n            if (_.isArray(value) && converter.acceptList !== true) {\n                converted = convertArray(converter, value, converterName);\n            } else {\n                converted = converter.convert(value, converterName);\n            }\n            return converted;\n        };\n        _.each(list, function (converterName) {\n            var converter = me.getConverter(converterName);\n            if ($.isPlainObject(currentValue) && converter.acceptList !== true) {\n                currentValue = convertObject(converter, currentValue, converterName);\n            } else {\n                currentValue = convert(converter, currentValue, converterName);\n            }\n        });\n        return currentValue;\n    },\n\n    /**\n     * Counter-part to 'convert'. Translates converted values back to their original form\n     * @param  {String} value Value to parse\n     * @param  {String | Array} list  List of parsers to run this through. Outermost is invoked first\n     * @return {*}\n     */\n    parse: function (value, list) {\n        if (!list || !list.length) {\n            return value;\n        }\n        list = [].concat(list).reverse();\n        list = _.invoke(list, 'trim');\n\n        var currentValue = value;\n        var me = this;\n        _.each(list, function (converterName) {\n            var converter = me.getConverter(converterName);\n            if (converter.parse) {\n                currentValue = converter.parse(currentValue, converterName);\n            }\n        });\n        return currentValue;\n    }\n};\n\n\n//Bootstrap\nvar defaultconverters = [\n    require('./number-converter'),\n    require('./string-converter'),\n    require('./array-converter'),\n    require('./numberformat-converter'),\n];\n\n$.each(defaultconverters.reverse(), function (index, converter) {\n    if (_.isArray(converter)) {\n        _.each(converter, function (c) {\n           converterManager.register(c);\n        });\n    } else {\n        converterManager.register(converter);\n    }\n});\n\nmodule.exports = converterManager;\n","'use strict';\n\nmodule.exports = {\n\n    toImplicitType: function (data) {\n        var rbrace = /^(?:\\{.*\\}|\\[.*\\])$/;\n        var converted = data;\n        if (typeof data === 'string') {\n            data = data.trim();\n\n            if (data === 'true') {\n                converted = true;\n            } else if (data === 'false') {\n                converted = false;\n            } else if (data === 'null') {\n                converted = null;\n            } else if (data === 'undefined') {\n                converted = '';\n            } else if (converted.charAt(0) === '\\'' || converted.charAt(0) === '\"') {\n                converted = data.substring(1, data.length - 1);\n            } else if ($.isNumeric(data)) {\n                converted = +data;\n            } else if (rbrace.test(data)) {\n                //TODO: This only works with double quotes, i.e., [1,\"2\"] works but not [1,'2']\n                converted = $.parseJSON(data) ;\n            }\n        }\n        return converted;\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    match: function (matchExpr, matchValue, context) {\n        if (_.isString(matchExpr)) {\n            return (matchExpr === '*' || (matchExpr.toLowerCase() === matchValue.toLowerCase()));\n        } else if (_.isFunction(matchExpr)) {\n            return matchExpr(matchValue, context);\n        } else if (_.isRegExp(matchExpr)) {\n            return matchValue.match(matchExpr);\n        }\n    },\n\n    getConvertersList: function ($el, property) {\n        var attrConverters = $el.data('f-convert-' + property);\n\n        if (!attrConverters && (property === 'bind' || property === 'foreach')) {\n            //Only bind inherits from parents\n            attrConverters = $el.data('f-convert');\n            if (!attrConverters) {\n                var $parentEl = $el.closest('[data-f-convert]');\n                if ($parentEl) {\n                    attrConverters = $parentEl.data('f-convert');\n                }\n            }\n\n            if (attrConverters) {\n                attrConverters = _.invoke(attrConverters.split('|'), 'trim');\n            }\n        }\n\n        return attrConverters;\n    }\n};\n","'use strict';\n\nmodule.exports = function (target, domManager) {\n    if (!window.MutationObserver) {\n        return false;\n    }\n\n    // Create an observer instance\n    var observer = new MutationObserver(function (mutations) {\n      mutations.forEach(function (mutation) {\n        var added = $(mutation.addedNodes).find(':f');\n        added = added.add($(mutation.addedNodes).filter(':f'));\n\n        var removed = $(mutation.removedNodes).find(':f');\n        removed = removed.add($(mutation.removedNodes).filter(':f'));\n\n        if (added && added.length) {\n            // console.log('mutation observer added', added.get(), mutation.addedNodes);\n            domManager.bindAll(added);\n        }\n        if (removed && removed.length) {\n            // console.log('mutation observer removed', removed);\n            domManager.unbindAll(removed);\n        }\n      });\n    });\n\n    var mutconfig = {\n        attributes: false,\n        childList: true,\n        subtree: true,\n        characterData: false\n    };\n    observer.observe(target, mutconfig);\n    // Later, you can stop observing\n    // observer.disconnect();\n};\n","'use strict';\nvar config = require('../config');\n\nmodule.exports = function (options) {\n    var defaults = {\n        /**\n         * Determine when to update state\n         * @type {String | Array | Object} Possible options are\n         *       - true: never trigger any updates. Use this if you know your model state won't change based on other variables\n         *       - false: always trigger updates.\n         *       - [array of variable names]: Variables in this array will not trigger updates, everything else will\n         *       - { except: [array of variables]}: Variables in this array will trigger updates, nothing else will\n         */\n        silent: false,\n\n        autoFetch: false\n    };\n\n    var channelOptions = $.extend(true, {}, defaults, options);\n    var vs = channelOptions.run.variables();\n    var vent = channelOptions.vent;\n\n    var currentData = {};\n\n    //TODO: actually compare objects and so on\n    var isEqual = function (a, b) {\n        return false;\n    };\n\n    var getInnerVariables = function (str) {\n        var inner = str.match(/<(.*?)>/g);\n        inner = _.map(inner, function (val) {\n            return val.substring(1, val.length - 1);\n        });\n        return inner;\n    };\n\n    //Replaces stubbed out keynames in variablestointerpolate with their corresponding values\n    var interpolate = function (variablesToInterpolate, values) {\n        //{price[1]: price[<time>]}\n        var interpolationMap = {};\n        //{price[1]: 1}\n        var interpolated = [];\n\n        _.each(variablesToInterpolate, function (outerVariable) {\n            var inner = getInnerVariables(outerVariable);\n            if (inner && inner.length) {\n                var originalOuter = outerVariable;\n                $.each(inner, function (index, innerVariable) {\n                    var thisval = values[innerVariable];\n                    if (thisval !== null && thisval !== undefined) {\n                        if (_.isArray(thisval)) {\n                            //For arrayed things get the last one for interpolation purposes\n                            thisval = thisval[thisval.length - 1];\n                        }\n                        //TODO: Regex to match spaces and so on\n                        outerVariable = outerVariable.replace('<' + innerVariable + '>', thisval);\n                    }\n                });\n                interpolationMap[outerVariable] = (interpolationMap[outerVariable]) ? [originalOuter].concat(interpolationMap[outerVariable]) : originalOuter;\n            }\n            interpolated.push(outerVariable);\n        });\n\n        var op = {\n            interpolated: interpolated,\n            interpolationMap: interpolationMap\n        };\n        return op;\n    };\n\n    var lastCheckTime = _.now();\n    var publicAPI = {\n        //for testing\n        private: {\n            getInnerVariables: getInnerVariables,\n            interpolate: interpolate,\n            options: channelOptions\n        },\n\n        subscriptions: [],\n\n        unfetched: [],\n\n        getSubscribers: function (topic) {\n            if (topic) {\n                return _.filter(this.subscriptions, function (subs) {\n                    return _.contains(subs.topics, topic);\n                });\n            } else {\n                return this.subscriptions;\n            }\n        },\n        getAllTopics: function () {\n            return _(this.subscriptions).pluck('topics').flatten().uniq().value();\n        },\n        getTopicDependencies: function (list) {\n            if (!list) {\n                list = this.getAllTopics();\n            }\n            var innerList = [];\n            _.each(list, function (vname) {\n                var inner = getInnerVariables(vname);\n                if (inner.length) {\n                    innerList = _.uniq(innerList.concat(inner));\n                }\n            });\n            return innerList;\n        },\n\n        updateAndCheckForRefresh: function (topics) {\n            this.unfetched = _.uniq(this.unfetched.concat(topics));\n            // if it has been a second since you last checked, or there are at least 5 items in the pending queue\n            var TIME_BETWEEN_CHECKS = 200;\n            var MAX_ITEMS_IN_QUEUE = 5;\n            var me = this;\n            var now = _.now();\n            if (channelOptions.autoFetch && (now - lastCheckTime > TIME_BETWEEN_CHECKS || this.unfetched.length > MAX_ITEMS_IN_QUEUE)) {\n                this.fetch(this.unfetched).then(function (changed) {\n                    // console.log(\"fetched\", _.now())\n                    $.extend(currentData, changed);\n                    me.unfetched = [];\n                    lastCheckTime = now;\n                    me.notify(changed);\n                });\n            } else {\n                // console.log(\"not time yet\", (now - lastCheckTime))\n            }\n        },\n\n        fetch: function (variablesList) {\n            variablesList = [].concat(variablesList);\n            var innerVariables = this.getTopicDependencies(variablesList);\n            var getVariables = function (vars, interpolationMap) {\n                return vs.query(vars).then(function (variables) {\n                    // console.log('Got variables', variables);\n                    var changeSet = {};\n                    _.each(variables, function (value, vname) {\n                        var oldValue = currentData[vname];\n                        if (!isEqual(value, oldValue)) {\n                            changeSet[vname] = value;\n                            if (interpolationMap && interpolationMap[vname]) {\n                                var map = [].concat(interpolationMap[vname]);\n                                _.each(map, function (interpolatedName) {\n                                    changeSet[interpolatedName] = value;\n                                });\n                            }\n                        }\n                    });\n                    return changeSet;\n                });\n            };\n            if (innerVariables.length) {\n                return vs.query(innerVariables).then(function (innerVariables) {\n                    //console.log('inner', innerVariables);\n                    $.extend(currentData, innerVariables);\n                    var ip =  interpolate(variablesList, innerVariables);\n                    return getVariables(ip.interpolated, ip.interpolationMap);\n                });\n            } else {\n                return getVariables(variablesList);\n            }\n        },\n\n        /**\n         * Check and notify all listeners\n         * @param  {Object} changeObj key-value pairs of changed variables\n         */\n        refresh: function (changeObj, force) {\n            var me = this;\n            var silent = channelOptions.silent;\n            var changedVariables = _.keys(changeObj);\n\n            var shouldSilence = silent === true;\n            if (_.isArray(silent) && changedVariables) {\n                shouldSilence = _.intersection(silent, changedVariables).length >= 1;\n            }\n            if ($.isPlainObject(silent) && changedVariables) {\n                shouldSilence = _.intersection(silent.except, changedVariables).length !== changedVariables.length;\n            }\n\n            if (shouldSilence && force !== true) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var variables = this.getAllTopics();\n            return this.fetch(variables).then(function (changeSet) {\n                me.unfetched = [];\n                $.extend(currentData, changeSet);\n                me.notify(changeSet);\n            });\n        },\n\n        notify: function (topics, value) {\n            var callTarget = function (target, params) {\n                if (_.isFunction(target)) {\n                    target.call(null, params);\n                } else {\n                    target.trigger(config.events.react, params);\n                }\n            };\n\n            if (!$.isPlainObject(topics)) {\n                topics = _.object([topics], [value]);\n            }\n            _.each(this.subscriptions, function (subscription) {\n                var target = subscription.target;\n                if (subscription.batch) {\n                    var matchingTopics = _.pick(topics, subscription.topics);\n                    if (_.size(matchingTopics) === _.size(subscription.topics)) {\n                        callTarget(target, matchingTopics);\n                    }\n                } else {\n                    _.each(subscription.topics, function (topic) {\n                        var matchingTopics = _.pick(topics, topic);\n                        if (_.size(matchingTopics)) {\n                            callTarget(target, matchingTopics);\n                        }\n                    });\n                }\n            });\n        },\n\n        /**\n         * Variable name & parameters to send variables API\n         * @param  {string | object} variable string or {variablename: value}\n         * @param  {*} value (optional)   value of variable if previous arg was a string\n         * @param {object} options Supported options: {silent: Boolean}\n         * @return {$promise}\n         */\n        publish: function (variable, value, options) {\n            // console.log('publish', arguments);\n            var attrs;\n            if ($.isPlainObject(variable)) {\n                attrs = variable;\n                options = value;\n            } else {\n                (attrs = {})[variable] = value;\n            }\n            var it = interpolate(_.keys(attrs), currentData);\n\n            var toSave = {};\n            _.each(attrs, function (val, attr) {\n               var key = (it.interpolationMap[attr]) ? it.interpolationMap[attr] : attr;\n               toSave[key] = val;\n            });\n            var me = this;\n            return vs.save.call(vs, toSave)\n                .then(function () {\n                    if (!options || !options.silent) {\n                        me.refresh.call(me, attrs);\n                    }\n                });\n        },\n\n        /**\n         * Subscribe to changes on a channel\n         * @param  {Array|String} topics List of tasks\n         * @param  {function|object} subscriber\n         * @param  {Object} options  (Optional)\n         * @return {String}            Subscription ID\n         */\n        subscribe: function (topics, subscriber, options) {\n            // console.log('subscribing', topics, subscriber);\n            var defaults = {\n                batch: false\n            };\n\n            topics = [].concat(topics);\n            //use jquery to make event sink\n            if (!subscriber.on && !_.isFunction(subscriber)) {\n                subscriber = $(subscriber);\n            }\n\n            var id  = _.uniqueId('epichannel.variable');\n            var data = $.extend({\n                id: id,\n                topics: topics,\n                target: subscriber\n            }, defaults, options);\n\n            this.subscriptions.push(data);\n\n            this.updateAndCheckForRefresh(topics);\n            return id;\n        },\n\n\n        unsubscribe: function (token) {\n            this.subscriptions = _.reject(this.subscriptions, function (subs) {\n                return subs.id === token;\n            });\n        },\n        unsubscribeAll: function () {\n            this.subscriptions = [];\n        }\n    };\n\n    $.extend(this, publicAPI);\n    var me = this;\n    $(vent).off('dirty').on('dirty', function () {\n        me.refresh.call(me, null, true);\n    });\n};\n","'use strict';\nvar config = require('../config');\n\nmodule.exports = function (options) {\n    var defaults = {\n        /**\n         * Determine when to update state\n         * @type {String | Array | Object} Possible options are\n         *       - true: never trigger any updates. Use this if you know your model state won't change based on operations\n         *       - false: always trigger updates.\n         *       - [array of variable names]: Variables in this array will not trigger updates, everything else will\n         *       - { except: [array of operations]}: Variables in this array will trigger updates, nothing else will\n         */\n        silent: false\n    };\n\n    var channelOptions = $.extend(true, {}, defaults, options);\n    var run = channelOptions.run;\n    var vent = channelOptions.vent;\n\n    var publicAPI = {\n        //for testing\n        private: {\n            options: channelOptions\n        },\n\n        listenerMap: {},\n\n        //Check for updates\n        /**\n         * Triggers update on sibling variables channel\n         * @param  {string|array} executedOpns operations which just happened\n         * @param  {*} response  response from the operation\n         * @param  {boolean} force  ignore all silence options and force refresh\n         */\n        refresh: function (executedOpns, response, force) {\n            var silent = channelOptions.silent;\n\n            var shouldSilence = silent === true;\n            if (_.isArray(silent) && executedOpns) {\n                shouldSilence = _.intersection(silent, executedOpns).length === silent.length;\n            }\n            if ($.isPlainObject(silent) && executedOpns) {\n                shouldSilence = _.intersection(silent.except, executedOpns).length !== executedOpns.length;\n            }\n\n            if (!shouldSilence || force === true) {\n                $(vent).trigger('dirty', { opn: executedOpns, response: response });\n                var me = this;\n                _.each(executedOpns, function (opn) {\n                    me.notify(opn, response);\n                });\n            }\n        },\n\n        notify: function (operation, value) {\n            var listeners = this.listenerMap[operation];\n            var params = {};\n            params[operation] = value;\n\n            _.each(listeners, function (listener) {\n                var target = listener.target;\n                if (_.isFunction(target)) {\n                    target.call(null, params);\n                } else if (target.trigger) {\n                    listener.target.trigger(config.events.react, params);\n                } else {\n                    throw new Error('Unknown listerer format for ' + operation);\n                }\n            });\n        },\n\n        /**\n         * Operation name & parameters to send to operations API\n         * @param  {string | object} operation Name of Operation. If array, needs to be in {operations: [{name: opn, params:[]}], serial: boolean}] format\n         * @param  {*} params (optional)   params to send to opertaion\n         * @param {option} options Supported options: {silent: Boolean}\n         * @return {$promise}\n         */\n        publish: function (operation, params, options) {\n            var me = this;\n            if ($.isPlainObject(operation) && operation.operations) {\n                var fn = (operation.serial) ? run.serial : run.parallel;\n                return fn.call(run, operation.operations)\n                        .then(function (response) {\n                            if (!params || !params.silent) {\n                                me.refresh.call(me, _.pluck(operation.operations, 'name'), response);\n                            }\n                        });\n            } else {\n                //TODO: check if interpolated\n                var opts = ($.isPlainObject(operation)) ? params : options;\n                return run.do.apply(run, arguments)\n                    .then(function (response) {\n                        if (!opts || !opts.silent) {\n                            me.refresh.call(me, [operation], response);\n                        }\n                    });\n            }\n            // console.log('operations publish', operation, params);\n        },\n\n        subscribe: function (operations, subscriber) {\n            // console.log('operations subscribe', operations, subscriber);\n            operations = [].concat(operations);\n            //use jquery to make event sink\n            //TODO: subscriber can be a function\n            if (!subscriber.on && !_.isFunction(subscriber)) {\n                subscriber = $(subscriber);\n            }\n\n            var id  = _.uniqueId('epichannel.operation');\n            var data = {\n                id: id,\n                target: subscriber\n            };\n\n            var me = this;\n\n            $.each(operations, function (index, opn) {\n                if (!me.listenerMap[opn]) {\n                    me.listenerMap[opn] = [];\n                }\n                me.listenerMap[opn] = me.listenerMap[opn].concat(data);\n            });\n\n            return id;\n        },\n        unsubscribe: function (operation, token) {\n            this.listenerMap[operation] = _.reject(this.listenerMap[operation], function (subs) {\n                return subs.id === token;\n            });\n        },\n        unsubscribeAll: function () {\n            this.listenerMap = {};\n        }\n    };\n    return $.extend(this, publicAPI);\n};\n","'use strict';\nmodule.exports = {\n    alias: 'i',\n    convert: function (value) {\n        return parseFloat(value, 10);\n    }\n};\n","'use strict';\nmodule.exports = {\n    s: function (val) {\n        return val + '';\n    },\n\n    upperCase: function (val) {\n        return (val + '').toUpperCase();\n    },\n    lowerCase: function (val) {\n        return (val + '').toLowerCase();\n    },\n    titleCase: function (val) {\n        val = val + '';\n        return val.replace(/\\w\\S*/g, function (txt) {return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    }\n};\n","'use strict';\nvar list = [\n    {\n        alias: 'list',\n        acceptList: true,\n        convert: function (val) {\n            return [].concat(val);\n        }\n    },\n    {\n        alias: 'last',\n        acceptList: true,\n        convert: function (val) {\n            val = [].concat(val);\n            return val[val.length - 1];\n        }\n    },\n    {\n        alias: 'first',\n        acceptList: true,\n        convert: function (val) {\n            val = [].concat(val);\n            return val[0];\n        }\n    },\n    {\n        alias: 'previous',\n        acceptList: true,\n        convert: function (val) {\n            val = [].concat(val);\n            return (val.length <= 1) ? val[0] : val[val.length - 2];\n        }\n    }\n];\n\n_.each(list, function (item) {\n   var oldfn = item.convert;\n   var newfn = function (val) {\n       if ($.isPlainObject(val)) {\n            return _.mapValues(val, oldfn);\n       } else {\n            return oldfn(val);\n       }\n   };\n   item.convert = newfn;\n});\nmodule.exports = list;\n","'use strict';\nmodule.exports = {\n    alias: function (name) {\n        //TODO: Fancy regex to match number formats here\n        return (name.indexOf('#') !== -1 || name.indexOf('0') !== -1);\n    },\n\n    parse: function (val) {\n        val+= '';\n        var isNegative = val.charAt(0) === '-';\n\n        val  = val.replace(/,/g, '');\n        var floatMatcher = /([-+]?[0-9]*\\.?[0-9]+)(K?M?B?%?)/i;\n        var results = floatMatcher.exec(val);\n        var number, suffix = '';\n        if (results && results[1]) {\n            number = results[1];\n        }\n        if (results && results[2]) {\n            suffix = results[2].toLowerCase();\n        }\n\n        switch (suffix) {\n            case '%':\n                number = number / 100;\n                break;\n            case 'k':\n                number = number * 1000;\n                break;\n            case 'm':\n                number = number * 1000000;\n                break;\n            case 'b':\n                number = number * 1000000000;\n                break;\n        }\n        number = parseFloat(number);\n        if (isNegative && number > 0) {\n            number = number * -1;\n        }\n        return number;\n    },\n\n    convert: (function (value) {\n        var scales = ['', 'K', 'M', 'B', 'T'];\n\n        function getDigits(value, digits) {\n            value = value === 0 ? 0 : roundTo(value, Math.max(0, digits - Math.ceil(Math.log(value) / Math.LN10)));\n\n            var TXT = '';\n            var numberTXT = value.toString();\n            var decimalSet = false;\n\n            for (var iTXT = 0; iTXT < numberTXT.length; iTXT++) {\n                TXT += numberTXT.charAt(iTXT);\n                if (numberTXT.charAt(iTXT) === '.') {\n                    decimalSet = true;\n                } else {\n                    digits--;\n                }\n\n                if (digits <= 0) {\n                    return TXT;\n                }\n            }\n\n            if (!decimalSet) {\n                TXT += '.';\n            }\n            while (digits > 0) {\n                TXT += '0';\n                digits--;\n            }\n            return TXT;\n        }\n\n        function addDecimals(value, decimals, minDecimals, hasCommas) {\n            hasCommas = hasCommas || true;\n            var numberTXT = value.toString();\n            var hasDecimals = (numberTXT.split('.').length > 1);\n            var iDec = 0;\n\n            if (hasCommas) {\n                for (var iChar = numberTXT.length - 1; iChar > 0; iChar--) {\n                    if (hasDecimals) {\n                        hasDecimals = (numberTXT.charAt(iChar) !== '.');\n                    } else {\n                        iDec = (iDec + 1) % 3;\n                        if (iDec === 0) {\n                            numberTXT = numberTXT.substr(0, iChar) + ',' + numberTXT.substr(iChar);\n                        }\n                    }\n                }\n\n            }\n            if (decimals > 0) {\n                var toADD;\n                if (numberTXT.split('.').length <= 1) {\n                    toADD = minDecimals;\n                    if (toADD > 0) {\n                        numberTXT += '.';\n                    }\n                } else {\n                    toADD = minDecimals - numberTXT.split('.')[1].length;\n                }\n\n                while (toADD > 0) {\n                    numberTXT += '0';\n                    toADD--;\n                }\n            }\n            return numberTXT;\n        }\n\n        function roundTo(value, digits) {\n            return Math.round(value * Math.pow(10, digits)) / Math.pow(10, digits);\n        }\n\n        function getSuffix(formatTXT) {\n            formatTXT = formatTXT.replace('.', '');\n            var fixesTXT = formatTXT.split(new RegExp('[0|,|#]+', 'g'));\n            return (fixesTXT.length > 1) ? fixesTXT[1].toString() : '';\n        }\n\n        function isCurrency(string) {\n            var s = $.trim(string);\n\n            if (s === '$' ||\n                s === 'â‚¬' ||\n                s === 'Â¥' ||\n                s === 'Â£' ||\n                s === 'â‚¡' ||\n                s === 'â‚±' ||\n                s === 'KÄ?' ||\n                s === 'kr' ||\n                s === 'Â¢' ||\n                s === 'â‚ª' ||\n                s === 'Æ’' ||\n                s === 'â‚©' ||\n                s === 'â‚«') {\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function format(number, formatTXT) {\n            if (_.isArray(number)) {\n                number = number[number.length - 1];\n            }\n            if (!_.isString(number) && !_.isNumber(number)) {\n                return number;\n            }\n\n            if (!formatTXT || formatTXT.toLowerCase() === 'default') {\n                return number.toString();\n            }\n\n            if (isNaN(number)) {\n                return '?';\n            }\n\n            //var formatTXT;\n            formatTXT = formatTXT.replace('&euro;', 'â‚¬');\n\n            // Divide +/- Number Format\n            var formats = formatTXT.split(';');\n            if (formats.length > 1) {\n                return format(Math.abs(number), formats[((number >= 0) ? 0 : 1)]);\n            }\n\n            // Save Sign\n            var sign = (number >= 0) ? '' : '-';\n            number = Math.abs(number);\n\n\n            var leftOfDecimal = formatTXT;\n            var d = leftOfDecimal.indexOf('.');\n            if (d > -1) {\n                leftOfDecimal = leftOfDecimal.substring(0, d);\n            }\n\n            var normalized = leftOfDecimal.toLowerCase();\n            var index = normalized.lastIndexOf('s');\n            var isShortFormat = index > -1;\n\n            if (isShortFormat) {\n                var nextChar = leftOfDecimal.charAt(index + 1);\n                if (nextChar === ' ') {\n                    isShortFormat = false;\n                }\n            }\n\n            var leadingText = isShortFormat ? formatTXT.substring(0, index) : '';\n            var rightOfPrefix = isShortFormat ? formatTXT.substr(index + 1) : formatTXT.substr(index);\n\n            //first check to make sure 's' is actually short format and not part of some leading text\n            if (isShortFormat) {\n                var shortFormatTest = /[0-9#*]/;\n                var shortFormatTestResult = rightOfPrefix.match(shortFormatTest);\n                if (!shortFormatTestResult || shortFormatTestResult.length === 0) {\n                    //no short format characters so this must be leading text ie. 'weeks '\n                    isShortFormat = false;\n                    leadingText = '';\n                }\n            }\n\n            //if (formatTXT.charAt(0) == 's')\n            if (isShortFormat) {\n                var valScale = number === 0 ? 0 : Math.floor(Math.log(Math.abs(number)) / (3 * Math.LN10));\n                valScale = ((number / Math.pow(10, 3 * valScale)) < 1000) ? valScale : (valScale + 1);\n                valScale = Math.max(valScale, 0);\n                valScale = Math.min(valScale, 4);\n                number = number / Math.pow(10, 3 * valScale);\n                //if (!isNaN(Number(formatTXT.substr(1) ) ) )\n\n                if (!isNaN(Number(rightOfPrefix)) && rightOfPrefix.indexOf('.') === -1) {\n                    var limitDigits = Number(rightOfPrefix);\n                    if (number < Math.pow(10, limitDigits)) {\n                        if (isCurrency(leadingText)) {\n                            return sign + leadingText + getDigits(number, Number(rightOfPrefix)) + scales[valScale];\n                        } else {\n                            return leadingText + sign + getDigits(number, Number(rightOfPrefix)) + scales[valScale];\n                        }\n                    } else {\n                        if (isCurrency(leadingText)) {\n                            return sign + leadingText + Math.round(number) + scales[valScale];\n                        } else {\n                            return leadingText + sign + Math.round(number) + scales[valScale];\n                        }\n                    }\n                } else {\n                    //formatTXT = formatTXT.substr(1);\n                    formatTXT = formatTXT.substr(index + 1);\n                    var SUFFIX = getSuffix(formatTXT);\n                    formatTXT = formatTXT.substr(0, formatTXT.length - SUFFIX.length);\n\n                    var valWithoutLeading = format(((sign === '') ? 1 : -1) * number, formatTXT) + scales[valScale] + SUFFIX;\n                    if (isCurrency(leadingText) && sign !== '') {\n                        valWithoutLeading = valWithoutLeading.substr(sign.length);\n                        return sign + leadingText + valWithoutLeading;\n                    }\n\n                    return leadingText + valWithoutLeading;\n                }\n            }\n\n            var subFormats = formatTXT.split('.');\n            var decimals;\n            var minDecimals;\n            if (subFormats.length > 1) {\n                decimals = subFormats[1].length - subFormats[1].replace(new RegExp('[0|#]+', 'g'), '').length;\n                minDecimals = subFormats[1].length - subFormats[1].replace(new RegExp('0+', 'g'), '').length;\n                formatTXT = subFormats[0] + subFormats[1].replace(new RegExp('[0|#]+', 'g'), '');\n            } else {\n                decimals = 0;\n            }\n\n            var fixesTXT = formatTXT.split(new RegExp('[0|,|#]+', 'g'));\n            var preffix = fixesTXT[0].toString();\n            var suffix = (fixesTXT.length > 1) ? fixesTXT[1].toString() : '';\n\n            number = number * ((formatTXT.split('%').length > 1) ? 100 : 1);\n            //            if (formatTXT.indexOf('%') !== -1) number = number * 100;\n            number = roundTo(number, decimals);\n\n            sign = (number === 0) ? '' : sign;\n\n            var hasCommas = (formatTXT.substr(formatTXT.length - 4 - suffix.length, 1) === ',');\n            var formatted = sign + preffix + addDecimals(number, decimals, minDecimals, hasCommas) + suffix;\n\n            //  console.log(originalNumber, originalFormat, formatted)\n            return formatted;\n        }\n\n        return format;\n    }())\n};\n","'use strict';\nvar BaseView = require('./default-input-node');\n\nmodule.exports = BaseView.extend({\n\n    propertyHandlers: [\n\n    ],\n\n    getUIValue: function () {\n        var $el = this.$el;\n        //TODO: file a issue for the vensim manager to convert trues to 1s and set this to true and false\n\n        var offVal =  ($el.data('f-off') !== undefined) ? $el.data('f-off') : 0;\n        //attr = initial value, prop = current value\n        var onVal = ($el.attr('value') !== undefined) ? $el.prop('value'): 1;\n\n        var val = ($el.is(':checked')) ? onVal : offVal;\n        return val;\n    },\n    initialize: function () {\n        BaseView.prototype.initialize.apply(this, arguments);\n    }\n}, { selector: ':checkbox,:radio' });\n","'use strict';\nvar config = require('../../config');\nvar BaseView = require('./default-node');\n\nmodule.exports = BaseView.extend({\n    propertyHandlers: [],\n\n    uiChangeEvent: 'change',\n    getUIValue: function () {\n        return this.$el.val();\n    },\n\n    removeEvents: function () {\n        this.$el.off(this.uiChangeEvent);\n    },\n\n    initialize: function () {\n        var me = this;\n        var propName = this.$el.data(config.binderAttr);\n\n        if (propName) {\n            this.$el.off(this.uiChangeEvent).on(this.uiChangeEvent, function () {\n                var val = me.getUIValue();\n\n                var params = {};\n                params[propName] = val;\n\n                me.$el.trigger(config.events.trigger, params);\n            });\n        }\n        BaseView.prototype.initialize.apply(this, arguments);\n    }\n}, { selector: 'input, select' });\n","'use strict';\n\nvar BaseView = require('./base');\n\nmodule.exports = BaseView.extend({\n    propertyHandlers: [\n\n    ],\n\n    initialize: function () {\n    }\n}, { selector: '*' });\n","'use strict';\n\n// Attributes which are just parameters to others and can just be ignored\nmodule.exports = {\n\n    target: '*',\n\n    test: /^(?:model|convert)$/i,\n\n    handle: $.noop,\n\n    init: function () {\n        return false;\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: function (attr, $node) {\n        return (attr.indexOf('on-init') === 0);\n    },\n\n    init: function (attr, value) {\n        attr = attr.replace('on-init', '');\n        var me = this;\n        $(function () {\n            var listOfOperations = _.invoke(value.split('|'), 'trim');\n            listOfOperations = listOfOperations.map(function (value) {\n                var fnName = value.split('(')[0];\n                var params = value.substring(value.indexOf('(') + 1, value.indexOf(')'));\n                var args = ($.trim(params) !== '') ? params.split(',') : [];\n                return { name: fnName, params: args };\n            });\n\n            me.trigger('f.ui.operate', { operations: listOfOperations, serial: true });\n        });\n        return false; //Don't bother binding on this attr. NOTE: Do readonly, true instead?;\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: function (attr, $node) {\n        return (attr.indexOf('on-') === 0);\n    },\n\n    stopListening: function (attr) {\n        attr = attr.replace('on-', '');\n        this.off(attr);\n    },\n\n    init: function (attr, value) {\n        attr = attr.replace('on-', '');\n        var me = this;\n        this.off(attr).on(attr, function () {\n            var listOfOperations = _.invoke(value.split('|'), 'trim');\n            listOfOperations = listOfOperations.map(function (value) {\n                var fnName = value.split('(')[0];\n                var params = value.substring(value.indexOf('(') + 1, value.indexOf(')'));\n                var args = ($.trim(params) !== '') ? params.split(',') : [];\n                return { name: fnName, params: args };\n            });\n\n            me.trigger('f.ui.operate', { operations: listOfOperations, serial: true });\n        });\n        return false; //Don't bother binding on this attr. NOTE: Do readonly, true instead?;\n    }\n};\n","'use strict';\nvar parseUtils = require('../../../utils/parse-utils');\nmodule.exports = {\n\n    test: 'foreach',\n\n    target: '*',\n\n    handle: function (value, prop) {\n        value = ($.isPlainObject(value) ? value : [].concat(value));\n        var $loopTemplate = this.data('foreach-template');\n        if (!$loopTemplate) {\n            $loopTemplate = this.children();\n            this.data('foreach-template', $loopTemplate);\n        }\n        var $me = this.empty();\n        _.each(value, function (dataval, datakey) {\n            dataval = dataval + '';\n            var nodes = $loopTemplate.clone();\n            nodes.each(function (i, newNode) {\n                newNode = $(newNode);\n                _.each(newNode.data(), function (val, key) {\n                    var templated =  _.template(val, { value: dataval, index: datakey, key: datakey });\n                    newNode.data(key, parseUtils.toImplicitType(templated));\n                });\n                var oldHTML = newNode.html();\n                var cleanedHTML = oldHTML.replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n                var templated = _.template(cleanedHTML, { value: dataval, key: datakey, index: datakey });\n                if (cleanedHTML === templated) {\n                    newNode.html(dataval);\n                } else {\n                    newNode.html(templated);\n                }\n                $me.append(newNode);\n            });\n        });\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: ':checkbox,:radio',\n\n    test: 'bind',\n\n    handle: function (value) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        var settableValue = this.attr('value'); //initial value\n        /*jslint eqeq: true*/\n        var isChecked = (settableValue !== undefined) ? (settableValue == value) : !!value;\n        this.prop('checked', isChecked);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n    target: 'input, select',\n\n    test: 'bind',\n\n    handle: function (value) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        this.val(value);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    test: 'class',\n\n    target: '*',\n\n    handle: function (value, prop) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n\n        var addedClasses = this.data('added-classes');\n        if (!addedClasses) {\n            addedClasses = {};\n        }\n        if (addedClasses[prop]) {\n            this.removeClass(addedClasses[prop]);\n        }\n\n        if (_.isNumber(value)) {\n            value = 'value-' + value;\n        }\n        addedClasses[prop] = value;\n        //Fixme: prop is always \"class\"\n        this.addClass(value);\n        this.data('added-classes', addedClasses);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n    target: '*',\n\n    test: /^(?:checked|selected|async|autofocus|autoplay|controls|defer|ismap|loop|multiple|open|required|scoped)$/i,\n\n    handle: function (value, prop) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        /*jslint eqeq: true*/\n        var val = (this.attr('value')) ? (value == this.prop('value')) : !!value;\n        this.prop(prop, val);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: /^(?:disabled|hidden|readonly)$/i,\n\n    handle: function (value, prop) {\n        if (_.isArray(value)) {\n            value = value[value.length - 1];\n        }\n        this.prop(prop, !value);\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    target: '*',\n\n    test: 'bind',\n\n    handle: function (value) {\n        var oldHTML = this.html();\n        var cleanedHTML = oldHTML.replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n        var valueToTemplate = ($.isPlainObject(value)) ? value : { value: value };\n        var templated = _.template(cleanedHTML, valueToTemplate);\n        if (cleanedHTML === templated) {\n            if (_.isArray(value)) {\n                value = value[value.length - 1];\n            }\n            this.html(value);\n        } else {\n            this.html(templated);\n        }\n    }\n};\n","'use strict';\n\nmodule.exports = {\n\n    test: '*',\n\n    target: '*',\n\n    handle: function (value, prop) {\n        this.prop(prop, value);\n    }\n};\n","'use strict';\n\nvar extend = function (protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n        child = protoProps.constructor;\n    } else {\n        child = function () { return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () { this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) {\n        _.extend(child.prototype, protoProps);\n    }\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n};\n\nvar View = function (options) {\n    this.$el = (options.$el) || $(options.el);\n    this.el = options.el;\n    this.initialize.apply(this, arguments);\n\n};\n\n_.extend(View.prototype, {\n    initialize: function () {},\n});\n\nView.extend = extend;\n\nmodule.exports = View;\n"]}